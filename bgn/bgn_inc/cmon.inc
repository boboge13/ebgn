/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 2796796
*
*******************************************************************************/
#ifndef _CMON_INC
#define _CMON_INC

#include "findex.inc"

FUNC_ADDR_NODE g_cmon_func_addr_list[ ] = {
{
/* -- void cmon_print_module_status(const UINT32 cmon_md_id, LOG *log); -- */
/*func priority   */     PRIO_BEG,
/*func logic addr */     (UINT32)cmon_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_print_module_status",
/*func index      */     FI_cmon_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_free_module_static_mem(const UINT32 cmon_md_id); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_free_module_static_mem",
/*func index      */     FI_cmon_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_start(); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_start",
/*func index      */     FI_cmon_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void cmon_end(const UINT32 cmon_md_id); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_end",
/*func index      */     FI_cmon_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_set_mod_mgr(const UINT32 cmon_md_id, const MOD_MGR * src_mod_mgr); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_set_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_set_mod_mgr",
/*func index      */     FI_cmon_set_mod_mgr,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MOD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- MOD_MGR * cmon_get_mod_mgr(const UINT32 cmon_md_id); -- */
/*func priority   */     PRIO_MD_CFILE,
/*func logic addr */     (UINT32)cmon_get_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_get_mod_mgr",
/*func index      */     FI_cmon_get_mod_mgr,
/*func ret type   */     e_dbg_MOD_MGR_ptr,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN},
/*func para type  */     {e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_meas(const UINT32 cmon_md_id, CMON_OBJ * cmon_obj); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_meas,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_meas",
/*func index      */     FI_cmon_obj_meas,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_print(const UINT32 cmon_md_id, LOG *log, const CMON_OBJ * cmon_obj); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_print,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_print",
/*func index      */     FI_cmon_obj_print,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,e_dbg_CMON_OBJ_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_init(const UINT32 cmon_md_id, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_init,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_init",
/*func index      */     FI_cmon_obj_vec_init,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_clean(const UINT32 cmon_md_id, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_clean,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_clean",
/*func index      */     FI_cmon_obj_vec_clean,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_free(const UINT32 cmon_md_id, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_free,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_free",
/*func index      */     FI_cmon_obj_vec_free,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_size(const UINT32 cmon_md_id, const CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_size,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_size",
/*func index      */     FI_cmon_obj_vec_size,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_add(const UINT32 cmon_md_id, const CMON_OBJ *cmon_obj, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_add,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_add",
/*func index      */     FI_cmon_obj_vec_add,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_ptr,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- CMON_OBJ *  cmon_obj_vec_get(const UINT32 cmon_md_id, const UINT32 cmon_obj_pos, const CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_get,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_get",
/*func index      */     FI_cmon_obj_vec_get,
/*func ret type   */     e_dbg_CMON_OBJ_ptr,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- CMON_OBJ * cmon_obj_vec_set(const UINT32 cmon_md_id, const UINT32 cmon_obj_pos, const CMON_OBJ *cmon_obj, CMON_OBJ_VEC * cmon_obj_vec) -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_set",
/*func index      */     FI_cmon_obj_vec_set,
/*func ret type   */     e_dbg_CMON_OBJ_ptr,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_OBJ_ptr,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_incl(const UINT32 cmon_md_id, const UINT32 cmon_oid, const UINT32 tcid, const UINT32 comm, const UINT32 rank, const UINT32 modi, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_incl,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_incl",
/*func index      */     FI_cmon_obj_vec_incl,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     7,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_excl(const UINT32 cmon_md_id, const UINT32 cmon_oid, const UINT32 tcid, const UINT32 comm, const UINT32 rank, const UINT32 modi, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_excl,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_excl",
/*func index      */     FI_cmon_obj_vec_excl,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     7,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_meas(const UINT32 cmon_md_id, const UINT32 time_to_live, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_meas,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_meas",
/*func index      */     FI_cmon_obj_vec_meas,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_print(const UINT32 cmon_md_id, LOG *log, const CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_print,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_print",
/*func index      */     FI_cmon_obj_vec_print,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_report(const UINT32 cmon_md_id, CMON_OBJ_VEC * cmon_obj_vec); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_report,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_report",
/*func index      */     FI_cmon_obj_vec_report,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 cmon_obj_vec_merge_print(const UINT32 cmon_md_id, const CMON_OBJ_VEC *cmon_obj_vec, LOG *log); -- */
/*func priority   */     PRIO_MD_CMON,
/*func logic addr */     (UINT32)cmon_obj_vec_merge_print,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "cmon_obj_vec_merge_print",
/*func index      */     FI_cmon_obj_vec_merge_print,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CMON_OBJ_VEC_ptr,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_cmon_func_addr_list_len = sizeof(g_cmon_func_addr_list)/sizeof(g_cmon_func_addr_list[0]);
#endif/*_CMON_INC*/


