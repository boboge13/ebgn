/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 2796796
*
*******************************************************************************/
#ifndef _CSESSION_INC
#define _CSESSION_INC

#include "findex.inc"

FUNC_ADDR_NODE g_csession_func_addr_list[ ] = {
{
/* -- void csession_print_module_status(const UINT32 csession_md_id, LOG *log); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_print_module_status",
/*func index      */     FI_csession_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 csession_free_module_static_mem(const UINT32 csession_md_id); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_free_module_static_mem",
/*func index      */     FI_csession_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 csession_start(); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_start",
/*func index      */     FI_csession_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void csession_end(const UINT32 csession_md_id); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_end",
/*func index      */     FI_csession_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- void csession_show(const UINT32 csession_md_id, LOG *log); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_show,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_show",
/*func index      */     FI_csession_show,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_node_is_expired(const UINT32 csession_md_id, const CSESSION_NODE *csession_node, const CTIMET *cur_time); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_node_is_expired,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_node_is_expired",
/*func index      */     FI_csession_node_is_expired,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSESSION_NODE_ptr,e_dbg_CTIMET_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_add(const UINT32 csession_md_id, const CSTRING *name, const UINT32 expire_nsec); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_add,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_add",
/*func index      */     FI_csession_add,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_rmv_by_name(const UINT32 csession_md_id, const CSTRING *name); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_rmv_by_name,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_rmv_by_name",
/*func index      */     FI_csession_rmv_by_name,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_rmv_by_id(const UINT32 csession_md_id, const UINT32 session_id); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_rmv_by_id,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_rmv_by_id",
/*func index      */     FI_csession_rmv_by_id,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_name(const UINT32 csession_md_id, const UINT32 session_id, CSTRING *session_name); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_name,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_name",
/*func index      */     FI_csession_get_name,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_id(const UINT32 csession_md_id, const CSTRING *session_name, UINT32 *session_id); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_id,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_id",
/*func index      */     FI_csession_get_id,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_set(const UINT32 csession_md_id, CSESSION_NODE *csession_node, const CSTRING *path, const CBYTES *val); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_set,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_set",
/*func index      */     FI_csession_set,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSESSION_NODE_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_set_by_name(const UINT32 csession_md_id, const CSTRING *session_name, const CSTRING *path, const CBYTES *val); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_set_by_name,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_set_by_name",
/*func index      */     FI_csession_set_by_name,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_set_by_id(const UINT32 csession_md_id, const UINT32 session_id, const CSTRING *path, const CBYTES *val); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_set_by_id,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_set_by_id",
/*func index      */     FI_csession_set_by_id,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CBYTES_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get(const UINT32 csession_md_id, const CSESSION_NODE *csession_node, const CSTRING *path, CLIST *csession_item_list); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get",
/*func index      */     FI_csession_get,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSESSION_NODE_ptr,e_dbg_CSTRING_ptr,e_dbg_CLIST_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_by_name(const UINT32 csession_md_id, const CSTRING *session_name, const CSTRING *path, CLIST *csession_item_list); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_by_name,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_by_name",
/*func index      */     FI_csession_get_by_name,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CLIST_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_by_id(const UINT32 csession_md_id, const UINT32 session_id, const CSTRING *path, CLIST *csession_item_list); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_by_id,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_by_id",
/*func index      */     FI_csession_get_by_id,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CLIST_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_by_name_regex(const UINT32 csession_md_id, const CSTRING *session_name_regex, const CSTRING *path, CLIST *csession_node_list); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_by_name_regex,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_by_name_regex",
/*func index      */     FI_csession_get_by_name_regex,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CLIST_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_get_by_id_regex(const UINT32 csession_md_id, const CSTRING *session_id_regex, const CSTRING *path, CLIST *csession_node_list); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_get_by_id_regex,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_get_by_id_regex",
/*func index      */     FI_csession_get_by_id_regex,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,e_dbg_CSTRING_ptr,e_dbg_CLIST_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_rmv_by_name_regex(const UINT32 csession_md_id, const CSTRING *session_name_regex); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_rmv_by_name_regex,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_rmv_by_name_regex",
/*func index      */     FI_csession_rmv_by_name_regex,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_rmv_by_id_regex(const UINT32 csession_md_id, const CSTRING *session_id_regex); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_rmv_by_id_regex,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_rmv_by_id_regex",
/*func index      */     FI_csession_rmv_by_id_regex,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_CSTRING_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL csession_expire_handle(const UINT32 csession_md_id); -- */
/*func priority   */     PRIO_MD_CSESSION,
/*func logic addr */     (UINT32)csession_expire_handle,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "csession_expire_handle",
/*func index      */     FI_csession_expire_handle,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_csession_func_addr_list_len = sizeof(g_csession_func_addr_list)/sizeof(g_csession_func_addr_list[0]);
#endif/*_CSESSION_INC*/
