/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 2796796
*
*******************************************************************************/
#ifndef _DMATRIXR_INC
#define _DMATRIXR_INC

#include "findex.inc"

FUNC_ADDR_NODE g_dmatrixr_func_addr_list[ ] = {
{
/* -- void dmatrix_r_print_module_status(const UINT32 dmatrixr_md_id, LOG *log); -- */
/*func priority   */     PRIO_BEG,
/*func logic addr */     (UINT32)dmatrix_r_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_print_module_status",
/*func index      */     FI_dmatrix_r_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_free_module_static_mem(const UINT32 dmatrixr_md_id); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_free_module_static_mem",
/*func index      */     FI_dmatrix_r_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_start( ); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_start",
/*func index      */     FI_dmatrix_r_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void dmatrix_r_end(const UINT32 dmatrixr_md_id); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_end",
/*func index      */     FI_dmatrix_r_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_set_mod_mgr(const UINT32 dmatrixr_md_id, const MOD_MGR * src_mod_mgr); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_set_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_set_mod_mgr",
/*func index      */     FI_dmatrix_r_set_mod_mgr,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MOD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- MOD_MGR * dmatrix_r_get_mod_mgr(const UINT32 matrixr_md_id) -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_get_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_mod_mgr",
/*func index      */     FI_dmatrix_r_get_mod_mgr,
/*func ret type   */     e_dbg_MOD_MGR_ptr,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN},
/*func para type  */     {e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_append_row_block(const UINT32 dmatrixr_md_id, const MATRIX_BLOCK *matrixr_row_block); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_append_row_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_append_row_block",
/*func index      */     FI_dmatrix_r_append_row_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_append_col_block(const UINT32 dmatrixr_md_id, const MATRIX_BLOCK *matrixr_col_block); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_append_col_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_append_col_block",
/*func index      */     FI_dmatrix_r_append_col_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_deliver_row_blocks(const UINT32 dmatrixr_md_id, const MATRIX *matrixr); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_deliver_row_blocks,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_deliver_row_blocks",
/*func index      */     FI_dmatrix_r_deliver_row_blocks,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_deliver_col_blocks(const UINT32 dmatrixr_md_id, const MATRIX *matrixr); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_deliver_col_blocks,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_deliver_col_blocks",
/*func index      */     FI_dmatrix_r_deliver_col_blocks,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_deliver_rows_p(const UINT32 dmatrixr_md_id, const MATRIX *matrixr); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_deliver_rows_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_deliver_rows_p",
/*func index      */     FI_dmatrix_r_deliver_rows_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_deliver_cols_p(const UINT32 dmatrixr_md_id, const MATRIX *matrixr) -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_deliver_cols_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_deliver_cols_p",
/*func index      */     FI_dmatrix_r_deliver_cols_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_clone_row_block(const UINT32 dmatrixr_md_id, MATRIX_BLOCK *des_matrix_block); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_clone_row_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_clone_row_block",
/*func index      */     FI_dmatrix_r_clone_row_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_adc_row_block(const UINT32 dmatrixr_md_id, const MATRIX_BLOCK *src_matrix_row_block); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_adc_row_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_adc_row_block",
/*func index      */     FI_dmatrix_r_adc_row_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_mul_row_block(const UINT32 dmatrixr_md_id, const MATRIX_BLOCK *src_matrix_row_block); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_mul_row_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_mul_row_block",
/*func index      */     FI_dmatrix_r_mul_row_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_mul_p(const UINT32 dmatrixr_md_id, const MATRIX *src_matrix_1, const MATRIX *src_matrix_2, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_mul_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_mul_p",
/*func index      */     FI_dmatrix_r_mul_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 dmatrix_r_clean_cache(const UINT32 dmatrixr_md_id, const UINT32 row_num_of_src_matrix_row_block, const UINT32 col_blocks_num); -- */
/*func priority   */     PRIO_MD_DMATRIXR,
/*func logic addr */     (UINT32)dmatrix_r_clean_cache,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "dmatrix_r_clean_cache",
/*func index      */     FI_dmatrix_r_clean_cache,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},

};

UINT32 g_dmatrixr_func_addr_list_len = sizeof(g_dmatrixr_func_addr_list)/sizeof(g_dmatrixr_func_addr_list[0]);

#endif/*_DMATRIXR_INC*/
