/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 312230917
*
*******************************************************************************/
#ifndef _FINDEX_INC
#define _FINDEX_INC

#define           FI_bgn_f2n_print_module_status   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    1))
#define        FI_bgn_f2n_free_module_static_mem   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    2))
#define                         FI_bgn_f2n_start   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    3))
#define                           FI_bgn_f2n_end   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    4))
#define                           FI_bgn_f2n_cmp   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    5))
#define                         FI_bgn_f2n_clone   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    6))
#define                       FI_bgn_f2n_is_zero   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    7))
#define                        FI_bgn_f2n_is_one   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    8))
#define                        FI_bgn_f2n_is_odd   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +    9))
#define                      FI_bgn_f2n_set_zero   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   10))
#define                       FI_bgn_f2n_set_one   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   11))
#define                      FI_bgn_f2n_set_word   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   12))
#define                    FI_bgn_f2n_parse_bits   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   13))
#define                           FI_bgn_f2n_naf   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   14))
#define                           FI_bgn_f2n_deg   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   15))
#define               FI_bgn_f2n_shr_onewordsize   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   16))
#define              FI_bgn_f2n_shr_lesswordsize   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   17))
#define               FI_bgn_f2n_shl_onewordsize   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   18))
#define              FI_bgn_f2n_shl_lesswordsize   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   19))
#define                           FI_bgn_f2n_add   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   20))
#define                           FI_bgn_f2n_sub   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   21))
#define                    FI_bgn_f2n_add_offset   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   22))
#define                           FI_bgn_f2n_squ   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   23))
#define                           FI_bgn_f2n_mul   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   24))
#define                           FI_bgn_f2n_inv   ((UINT32) ((MD_BGNF2N << (WORDSIZE/2)) +   25))
#define            FI_bgn_fp_print_module_status   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    1))
#define         FI_bgn_fp_free_module_static_mem   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    2))
#define                          FI_bgn_fp_start   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    3))
#define                            FI_bgn_fp_end   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    4))
#define                          FI_bgn_fp_clone   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    5))
#define                            FI_bgn_fp_cmp   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    6))
#define                       FI_bgn_fp_set_zero   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    7))
#define                        FI_bgn_fp_set_one   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    8))
#define                       FI_bgn_fp_set_word   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +    9))
#define                          FI_bgn_fp_set_e   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   10))
#define                        FI_bgn_fp_set_max   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   11))
#define                        FI_bgn_fp_is_zero   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   12))
#define                         FI_bgn_fp_is_one   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   13))
#define                           FI_bgn_fp_is_n   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   14))
#define                         FI_bgn_fp_is_odd   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   15))
#define                FI_bgn_fp_shr_lessbgnsize   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   16))
#define                FI_bgn_fp_shl_onewordsize   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   17))
#define               FI_bgn_fp_shl_lesswordsize   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   18))
#define                            FI_bgn_fp_naf   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   19))
#define                            FI_bgn_fp_add   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   20))
#define                            FI_bgn_fp_sub   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   21))
#define                            FI_bgn_fp_neg   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   22))
#define                            FI_bgn_fp_mul   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   23))
#define                           FI_bgn_fp_smul   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   24))
#define                            FI_bgn_fp_squ   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   25))
#define                           FI_bgn_fp_sexp   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   26))
#define                            FI_bgn_fp_exp   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   27))
#define                            FI_bgn_fp_inv   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   28))
#define                            FI_bgn_fp_div   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   29))
#define                           FI_bgn_fp_sdiv   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   30))
#define                           FI_bgn_fp_divs   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   31))
#define                       FI_bgn_fp_legendre   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   32))
#define                        FI_bgn_fp_squroot   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   33))
#define                 FI_bgn_fp_squroot_common   ((UINT32) ((MD_BGNFP << (WORDSIZE/2)) +   34))
#define            FI_bgn_z2_print_module_status   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    1))
#define         FI_bgn_z2_free_module_static_mem   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    2))
#define                          FI_bgn_z2_start   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    3))
#define                            FI_bgn_z2_end   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    4))
#define                            FI_bgn_z2_cmp   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    5))
#define                          FI_bgn_z2_clone   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    6))
#define                        FI_bgn_z2_is_zero   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    7))
#define                         FI_bgn_z2_is_one   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    8))
#define                         FI_bgn_z2_is_odd   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +    9))
#define                       FI_bgn_z2_set_zero   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   10))
#define                        FI_bgn_z2_set_one   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   11))
#define                       FI_bgn_z2_set_word   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   12))
#define                     FI_bgn_z2_parse_bits   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   13))
#define                            FI_bgn_z2_naf   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   14))
#define                            FI_bgn_z2_deg   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   15))
#define                          FI_bgn_z2_set_e   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   16))
#define                        FI_bgn_z2_get_bit   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   17))
#define                        FI_bgn_z2_set_bit   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   18))
#define                      FI_bgn_z2_clear_bit   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   19))
#define               FI_bgn_z2_dshr_onewordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   20))
#define              FI_bgn_z2_dshr_lesswordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   21))
#define              FI_bgn_z2_dshr_no_shift_out   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   22))
#define               FI_bgn_z2_dshl_onewordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   23))
#define              FI_bgn_z2_dshl_lesswordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   24))
#define              FI_bgn_z2_dshl_no_shift_out   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   25))
#define               FI_bgn_z2_sshr_onewordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   26))
#define              FI_bgn_z2_sshr_lesswordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   27))
#define              FI_bgn_z2_sshr_no_shift_out   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   28))
#define               FI_bgn_z2_sshl_onewordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   29))
#define              FI_bgn_z2_sshl_lesswordsize   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   30))
#define              FI_bgn_z2_sshl_no_shift_out   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   31))
#define                            FI_bgn_z2_add   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   32))
#define                           FI_bgn_z2_sadd   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   33))
#define                           FI_bgn_z2_dadd   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   34))
#define                            FI_bgn_z2_sub   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   35))
#define                           FI_bgn_z2_ssub   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   36))
#define                           FI_bgn_z2_dsub   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   37))
#define                     FI_bgn_z2_add_offset   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   38))
#define                            FI_bgn_z2_squ   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   39))
#define                         FI_bgn_z2_premul   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   40))
#define                            FI_bgn_z2_mul   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   41))
#define                            FI_bgn_z2_div   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   42))
#define                         FI_bgn_z2_ddiv_1   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   43))
#define                         FI_bgn_z2_ddiv_2   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   44))
#define                           FI_bgn_z2_ddiv   ((UINT32) ((MD_BGNZ2 << (WORDSIZE/2)) +   45))
#define             FI_bgn_z_print_module_status   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    1))
#define          FI_bgn_z_free_module_static_mem   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    2))
#define                           FI_bgn_z_start   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    3))
#define                             FI_bgn_z_end   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    4))
#define                             FI_bgn_z_cmp   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    5))
#define                           FI_bgn_z_clone   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    6))
#define                         FI_bgn_z_is_zero   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    7))
#define                          FI_bgn_z_is_one   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    8))
#define                            FI_bgn_z_is_n   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +    9))
#define                          FI_bgn_z_is_odd   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   10))
#define                        FI_bgn_z_get_word   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   11))
#define                         FI_bgn_z_get_len   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   12))
#define                        FI_bgn_z_set_word   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   13))
#define                        FI_bgn_z_set_zero   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   14))
#define                         FI_bgn_z_set_one   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   15))
#define                         FI_bgn_z_set_max   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   16))
#define                      FI_bgn_z_parse_bits   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   17))
#define                             FI_bgn_z_naf   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   18))
#define                       FI_bgn_z_get_nbits   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   19))
#define                         FI_bgn_z_get_bit   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   20))
#define                         FI_bgn_z_set_bit   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   21))
#define                       FI_bgn_z_clear_bit   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   22))
#define                           FI_bgn_z_set_e   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   23))
#define                         FI_bgn_z_bit_and   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   24))
#define                          FI_bgn_z_bit_or   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   25))
#define                         FI_bgn_z_bit_xor   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   26))
#define                 FI_bgn_z_shr_onewordsize   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   27))
#define                FI_bgn_z_shr_lesswordsize   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   28))
#define                FI_bgn_z_shr_no_shift_out   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   29))
#define               FI_bgn_z_dshr_no_shift_out   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   30))
#define                 FI_bgn_z_shl_onewordsize   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   31))
#define                FI_bgn_z_shl_lesswordsize   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   32))
#define                FI_bgn_z_shl_no_shift_out   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   33))
#define               FI_bgn_z_dshl_no_shift_out   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   34))
#define                             FI_bgn_z_add   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   35))
#define                            FI_bgn_z_sadd   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   36))
#define                            FI_bgn_z_dadd   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   37))
#define                             FI_bgn_z_sub   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   38))
#define                            FI_bgn_z_ssub   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   39))
#define                            FI_bgn_z_dsub   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   40))
#define                             FI_bgn_z_mul   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   41))
#define                            FI_bgn_z_smul   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   42))
#define                             FI_bgn_z_squ   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   43))
#define                             FI_bgn_z_div   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   44))
#define                            FI_bgn_z_ddiv   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   45))
#define                             FI_bgn_z_gcd   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   46))
#define                           FI_bgn_z_evens   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   47))
#define                             FI_bgn_z_mod   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   48))
#define                             FI_bgn_z_crt   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   49))
#define                     FI_bgn_z_inv_for_crt   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   50))
#define                       FI_bgn_z_sqrt_ceil   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   51))
#define                     FI_bgn_z_set_mod_mgr   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   52))
#define                     FI_bgn_z_get_mod_mgr   ((UINT32) ((MD_BGNZ << (WORDSIZE/2)) +   53))
#define            FI_bgn_zn_print_module_status   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    1))
#define         FI_bgn_zn_free_module_static_mem   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    2))
#define                          FI_bgn_zn_start   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    3))
#define                            FI_bgn_zn_end   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    4))
#define                          FI_bgn_zn_clone   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    5))
#define                            FI_bgn_zn_cmp   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    6))
#define                       FI_bgn_zn_set_zero   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    7))
#define                        FI_bgn_zn_set_one   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    8))
#define                       FI_bgn_zn_set_word   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +    9))
#define                          FI_bgn_zn_set_e   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   10))
#define                        FI_bgn_zn_set_max   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   11))
#define                        FI_bgn_zn_is_zero   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   12))
#define                         FI_bgn_zn_is_one   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   13))
#define                           FI_bgn_zn_is_n   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   14))
#define                         FI_bgn_zn_is_odd   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   15))
#define                FI_bgn_zn_shr_lessbgnsize   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   16))
#define                FI_bgn_zn_shl_onewordsize   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   17))
#define               FI_bgn_zn_shl_lesswordsize   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   18))
#define                            FI_bgn_zn_naf   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   19))
#define                            FI_bgn_zn_add   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   20))
#define                            FI_bgn_zn_sub   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   21))
#define                            FI_bgn_zn_neg   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   22))
#define                            FI_bgn_zn_mul   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   23))
#define                           FI_bgn_zn_smul   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   24))
#define                            FI_bgn_zn_squ   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   25))
#define                           FI_bgn_zn_sexp   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   26))
#define                            FI_bgn_zn_exp   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   27))
#define                            FI_bgn_zn_inv   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   28))
#define                            FI_bgn_zn_div   ((UINT32) ((MD_BGNZN << (WORDSIZE/2)) +   29))
#define              FI_conv_print_module_status   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    1))
#define                            FI_conv_start   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    2))
#define                              FI_conv_end   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    3))
#define                       FI_conv_dec_to_bgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    4))
#define                       FI_conv_bgn_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    5))
#define                       FI_conv_hex_to_bgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    6))
#define                       FI_conv_bgn_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    7))
#define                       FI_conv_bin_to_bgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    8))
#define                       FI_conv_bgn_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +    9))
#define            FI_conv_dec_to_ec_curve_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   10))
#define            FI_conv_ec_curve_point_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   11))
#define            FI_conv_hex_to_ec_curve_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   12))
#define            FI_conv_ec_curve_point_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   13))
#define            FI_conv_bin_to_ec_curve_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   14))
#define            FI_conv_ec_curve_point_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   15))
#define        FI_conv_dec_to_ec_curve_aff_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   16))
#define        FI_conv_ec_curve_aff_point_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   17))
#define        FI_conv_hex_to_ec_curve_aff_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   18))
#define        FI_conv_ec_curve_aff_point_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   19))
#define        FI_conv_bin_to_ec_curve_aff_point   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   20))
#define        FI_conv_ec_curve_aff_point_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   21))
#define               FI_conv_dec_to_ecf2n_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   22))
#define               FI_conv_ecf2n_curve_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   23))
#define               FI_conv_hex_to_ecf2n_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   24))
#define               FI_conv_ecf2n_curve_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   25))
#define               FI_conv_bin_to_ecf2n_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   26))
#define               FI_conv_ecf2n_curve_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   27))
#define                FI_conv_dec_to_ecfp_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   28))
#define                FI_conv_ecfp_curve_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   29))
#define                FI_conv_hex_to_ecfp_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   30))
#define                FI_conv_ecfp_curve_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   31))
#define                FI_conv_bin_to_ecfp_curve   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   32))
#define                FI_conv_ecfp_curve_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   33))
#define               FI_conv_dec_to_ecc_keypair   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   34))
#define               FI_conv_ecc_keypair_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   35))
#define               FI_conv_hex_to_ecc_keypair   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   36))
#define               FI_conv_ecc_keypair_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   37))
#define               FI_conv_bin_to_ecc_keypair   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   38))
#define               FI_conv_ecc_keypair_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   39))
#define             FI_conv_dec_to_ecc_signature   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   40))
#define             FI_conv_ecc_signature_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   41))
#define             FI_conv_hex_to_ecc_signature   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   42))
#define             FI_conv_ecc_signature_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   43))
#define             FI_conv_bin_to_ecc_signature   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   44))
#define             FI_conv_ecc_signature_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   45))
#define                      FI_conv_dec_to_poly   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   46))
#define                      FI_conv_poly_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   47))
#define                      FI_conv_hex_to_poly   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   48))
#define                      FI_conv_poly_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   49))
#define                      FI_conv_bin_to_poly   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   50))
#define                      FI_conv_poly_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   51))
#define                 FI_conv_dec_to_poly_item   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   52))
#define                 FI_conv_poly_item_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   53))
#define                 FI_conv_hex_to_poly_item   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   54))
#define                 FI_conv_poly_item_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   55))
#define                 FI_conv_bin_to_poly_item   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   56))
#define                 FI_conv_poly_item_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   57))
#define                    FI_conv_dec_to_uint32   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   58))
#define                    FI_conv_uint32_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   59))
#define                    FI_conv_hex_to_uint32   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   60))
#define                    FI_conv_uint32_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   61))
#define                    FI_conv_bin_to_uint32   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   62))
#define                    FI_conv_uint32_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   63))
#define                      FI_conv_real_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   64))
#define                      FI_conv_dec_to_real   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   65))
#define                      FI_conv_real_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   66))
#define                      FI_conv_hex_to_real   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   67))
#define                      FI_conv_real_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   68))
#define                      FI_conv_bin_to_real   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   69))
#define                    FI_conv_dec_to_uint16   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   70))
#define                    FI_conv_uint16_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   71))
#define                    FI_conv_hex_to_uint16   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   72))
#define                    FI_conv_uint16_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   73))
#define                    FI_conv_bin_to_uint16   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   74))
#define                    FI_conv_uint16_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   75))
#define                      FI_conv_dec_to_ebgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   76))
#define                      FI_conv_ebgn_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   77))
#define                      FI_conv_hex_to_ebgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   78))
#define                      FI_conv_ebgn_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   79))
#define                      FI_conv_bin_to_ebgn   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   80))
#define                      FI_conv_ebgn_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   81))
#define                       FI_conv_ebgn_clean   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   82))
#define                     FI_conv_ebgn_destroy   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   83))
#define                   FI_conv_vectorr_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   84))
#define                   FI_conv_dec_to_vectorr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   85))
#define                   FI_conv_vectorr_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   86))
#define                   FI_conv_hex_to_vectorr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   87))
#define                   FI_conv_vectorr_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   88))
#define                   FI_conv_bin_to_vectorr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   89))
#define                   FI_conv_matrixr_to_dec   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   90))
#define                   FI_conv_dec_to_matrixr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   91))
#define                   FI_conv_matrixr_to_hex   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   92))
#define                   FI_conv_hex_to_matrixr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   93))
#define                   FI_conv_matrixr_to_bin   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   94))
#define                   FI_conv_bin_to_matrixr   ((UINT32) ((MD_CONV << (WORDSIZE/2)) +   95))
#define            FI_ebgn_z_print_module_status   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    1))
#define         FI_ebgn_z_free_module_static_mem   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    2))
#define                          FI_ebgn_z_start   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    3))
#define                            FI_ebgn_z_end   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    4))
#define                       FI_ebgn_z_free_bgn   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    5))
#define                      FI_ebgn_z_free_item   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    6))
#define                      FI_ebgn_z_free_ebgn   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    7))
#define                          FI_ebgn_z_clean   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    8))
#define                        FI_ebgn_z_destroy   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +    9))
#define                          FI_ebgn_z_clone   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   10))
#define                        FI_ebgn_z_is_zero   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   11))
#define                         FI_ebgn_z_is_one   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   12))
#define                         FI_ebgn_z_is_odd   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   13))
#define                       FI_ebgn_z_set_zero   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   14))
#define                        FI_ebgn_z_set_one   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   15))
#define                       FI_ebgn_z_set_word   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   16))
#define                          FI_ebgn_z_set_n   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   17))
#define                          FI_ebgn_z_set_e   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   18))
#define                            FI_ebgn_z_cmp   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   19))
#define                        FI_ebgn_z_abs_cmp   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   20))
#define                           FI_ebgn_z_move   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   21))
#define                      FI_ebgn_z_get_nbits   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   22))
#define                        FI_ebgn_z_bit_and   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   23))
#define                         FI_ebgn_z_bit_or   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   24))
#define                        FI_ebgn_z_bit_xor   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   25))
#define                        FI_ebgn_z_bit_not   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   26))
#define                        FI_ebgn_z_get_bit   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   27))
#define                        FI_ebgn_z_set_bit   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   28))
#define                      FI_ebgn_z_clear_bit   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   29))
#define                            FI_ebgn_z_shr   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   30))
#define                            FI_ebgn_z_shl   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   31))
#define                            FI_ebgn_z_neg   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   32))
#define                            FI_ebgn_z_abs   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   33))
#define                            FI_ebgn_z_inc   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   34))
#define                            FI_ebgn_z_dec   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   35))
#define                            FI_ebgn_z_add   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   36))
#define                            FI_ebgn_z_sub   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   37))
#define                           FI_ebgn_z_smul   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   38))
#define                            FI_ebgn_z_mul   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   39))
#define                            FI_ebgn_z_squ   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   40))
#define                            FI_ebgn_z_cut   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   41))
#define                            FI_ebgn_z_div   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   42))
#define                     FI_ebgn_z_get_nevens   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   43))
#define                          FI_ebgn_z_evens   ((UINT32) ((MD_EBGNZ << (WORDSIZE/2)) +   44))
#define           FI_ecc_f2n_print_module_status   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    1))
#define        FI_ecc_f2n_free_module_static_mem   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    2))
#define                         FI_ecc_f2n_start   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    3))
#define                           FI_ecc_f2n_end   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    4))
#define                FI_ecc_f2n_get_public_key   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    5))
#define      FI_ecc_f2n_random_generator_default   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    6))
#define               FI_ecc_f2n_rnd_private_key   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    7))
#define              FI_ecc_f2n_generate_keypair   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    8))
#define                      FI_ecc_f2n_encoding   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +    9))
#define                      FI_ecc_f2n_decoding   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   10))
#define                    FI_ecc_f2n_encryption   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   11))
#define                    FI_ecc_f2n_decryption   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   12))
#define               FI_ecc_f2n_do_hash_default   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   13))
#define                       FI_ecc_f2n_signate   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   14))
#define                        FI_ecc_f2n_verify   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   15))
#define                     FI_ecc_f2n_compute_z   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   16))
#define                    FI_ecc_f2n_compute_gz   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   17))
#define                 FI_ecc_f2n_compute_trace   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   18))
#define                 FI_ecc_f2n_x_is_on_curve   ((UINT32) ((MD_ECCF2N << (WORDSIZE/2)) +   19))
#define            FI_ecc_fp_print_module_status   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    1))
#define         FI_ecc_fp_free_module_static_mem   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    2))
#define                          FI_ecc_fp_start   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    3))
#define                            FI_ecc_fp_end   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    4))
#define                 FI_ecc_fp_get_public_key   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    5))
#define       FI_ecc_fp_random_generator_default   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    6))
#define                FI_ecc_fp_rnd_private_key   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    7))
#define               FI_ecc_fp_generate_keypair   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    8))
#define                       FI_ecc_fp_encoding   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +    9))
#define                       FI_ecc_fp_decoding   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   10))
#define                     FI_ecc_fp_encryption   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   11))
#define                     FI_ecc_fp_decryption   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   12))
#define                FI_ecc_fp_do_hash_default   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   13))
#define                        FI_ecc_fp_signate   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   14))
#define                         FI_ecc_fp_verify   ((UINT32) ((MD_ECCFP << (WORDSIZE/2)) +   15))
#define            FI_ec_f2n_print_module_status   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    1))
#define         FI_ec_f2n_free_module_static_mem   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    2))
#define                          FI_ec_f2n_start   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    3))
#define                            FI_ec_f2n_end   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    4))
#define               FI_ec_f2n_point_is_infinit   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    5))
#define              FI_ec_f2n_point_set_infinit   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    6))
#define           FI_ec_f2n_point_aff_is_infinit   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    7))
#define          FI_ec_f2n_point_aff_set_infinit   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    8))
#define                    FI_ec_f2n_point_clone   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +    9))
#define                FI_ec_f2n_point_aff_clone   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   10))
#define                      FI_ec_f2n_curve_cmp   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   11))
#define                      FI_ec_f2n_point_cmp   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   12))
#define                  FI_ec_f2n_point_aff_cmp   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   13))
#define              FI_ec_f2n_point_is_on_curve   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   14))
#define                      FI_ec_f2n_point_neg   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   15))
#define                  FI_ec_f2n_point_mix_add   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   16))
#define                  FI_ec_f2n_point_mix_sub   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   17))
#define               FI_ec_f2n_point_aff_double   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   18))
#define                  FI_ec_f2n_point_convert   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   19))
#define              FI_ec_f2n_point_aff_convert   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   20))
#define                  FI_ec_f2n_point_mul_naf   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   21))
#define             FI_ec_f2n_point_mul_fix_base   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   22))
#define                      FI_ec_f2n_point_mul   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   23))
#define                      FI_ec_f2n_point_add   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   24))
#define                   FI_ec_f2n_point_double   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   25))
#define                      FI_ec_f2n_point_sub   ((UINT32) ((MD_ECF2N << (WORDSIZE/2)) +   26))
#define             FI_ec_fp_print_module_status   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    1))
#define          FI_ec_fp_free_module_static_mem   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    2))
#define                           FI_ec_fp_start   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    3))
#define                             FI_ec_fp_end   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    4))
#define                       FI_ec_fp_curve_cmp   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    5))
#define                       FI_ec_fp_point_cmp   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    6))
#define                     FI_ec_fp_point_clone   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    7))
#define                 FI_ec_fp_point_aff_clone   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    8))
#define                FI_ec_fp_point_is_infinit   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +    9))
#define            FI_ec_fp_point_aff_is_infinit   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   10))
#define               FI_ec_fp_point_set_infinit   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   11))
#define           FI_ec_fp_point_aff_set_infinit   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   12))
#define                       FI_ec_fp_point_neg   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   13))
#define                   FI_ec_fp_point_aff_neg   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   14))
#define                   FI_ec_fp_point_convert   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   15))
#define               FI_ec_fp_point_aff_convert   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   16))
#define               FI_ec_fp_point_is_on_curve   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   17))
#define                    FI_ec_fp_point_double   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   18))
#define                FI_ec_fp_point_aff_double   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   19))
#define                   FI_ec_fp_point_mix_add   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   20))
#define                   FI_ec_fp_point_mix_sub   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   21))
#define                       FI_ec_fp_point_add   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   22))
#define                       FI_ec_fp_point_sub   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   23))
#define                   FI_ec_fp_point_mul_naf   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   24))
#define              FI_ec_fp_point_mul_fix_base   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   25))
#define                       FI_ec_fp_point_mul   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   26))
#define                       FI_ec_fp_compute_z   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   27))
#define                       FI_ec_fp_compute_y   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   28))
#define                   FI_ec_fp_x_is_on_curve   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   29))
#define                    FI_ec_fp_disc_compute   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   30))
#define                 FI_ec_fp_j_invar_compute   ((UINT32) ((MD_ECFP << (WORDSIZE/2)) +   31))
#define          FI_poly_f2n_print_module_status   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    1))
#define       FI_poly_f2n_free_module_static_mem   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    2))
#define                        FI_poly_f2n_start   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    3))
#define                          FI_poly_f2n_end   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    4))
#define                 FI_poly_f2n_item_destory   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    5))
#define                    FI_poly_f2n_item_move   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    6))
#define                   FI_poly_f2n_item_clone   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    7))
#define                     FI_poly_f2n_item_cmp   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    8))
#define                   FI_poly_f2n_poly_clean   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +    9))
#define                 FI_poly_f2n_poly_destory   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   10))
#define                   FI_poly_f2n_poly_clone   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   11))
#define                     FI_poly_f2n_set_zero   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   12))
#define                      FI_poly_f2n_set_one   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   13))
#define                        FI_poly_f2n_set_n   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   14))
#define                     FI_poly_f2n_poly_cmp   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   15))
#define                        FI_poly_f2n_add_n   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   16))
#define                     FI_poly_f2n_adc_poly   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   17))
#define                     FI_poly_f2n_add_poly   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   18))
#define                    FI_poly_f2n_poly_move   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   19))
#define                     FI_poly_f2n_mul_poly   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   20))
#define                     FI_poly_f2n_squ_poly   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   21))
#define                         FI_poly_f2n_sexp   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   22))
#define                          FI_poly_f2n_exp   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   23))
#define                           FI_poly_f2n_dx   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   24))
#define                           FI_poly_f2n_Dx   ((UINT32) ((MD_POLYF2N << (WORDSIZE/2)) +   25))
#define           FI_poly_fp_print_module_status   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    1))
#define        FI_poly_fp_free_module_static_mem   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    2))
#define                         FI_poly_fp_start   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    3))
#define                           FI_poly_fp_end   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    4))
#define                      FI_poly_fp_free_bgn   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    5))
#define                      FI_poly_fp_free_deg   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    6))
#define                     FI_poly_fp_free_item   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    7))
#define                     FI_poly_fp_free_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    8))
#define                  FI_poly_fp_item_destory   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +    9))
#define                    FI_poly_fp_item_clone   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   10))
#define                      FI_poly_fp_item_cmp   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   11))
#define                      FI_poly_fp_item_neg   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   12))
#define                     FI_poly_fp_item_move   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   13))
#define                    FI_poly_fp_poly_clean   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   14))
#define                  FI_poly_fp_poly_destory   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   15))
#define                    FI_poly_fp_poly_clone   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   16))
#define                      FI_poly_fp_set_zero   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   17))
#define                       FI_poly_fp_set_one   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   18))
#define                      FI_poly_fp_set_word   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   19))
#define                         FI_poly_fp_set_n   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   20))
#define                        FI_poly_fp_set_xn   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   21))
#define                   FI_poly_fp_set_xn_word   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   22))
#define                     FI_poly_fp_poly_move   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   23))
#define                      FI_poly_fp_poly_cmp   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   24))
#define                         FI_poly_fp_add_n   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   25))
#define                      FI_poly_fp_adc_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   26))
#define                      FI_poly_fp_add_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   27))
#define                  FI_poly_fp_sub_poly_bgn   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   28))
#define                  FI_poly_fp_sub_bgn_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   29))
#define                      FI_poly_fp_poly_neg   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   30))
#define                      FI_poly_fp_sub_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   31))
#define                      FI_poly_fp_mul_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   32))
#define                       FI_poly_fp_mul_bgn   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   33))
#define                      FI_poly_fp_mul_word   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   34))
#define                      FI_poly_fp_squ_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   35))
#define                          FI_poly_fp_sexp   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   36))
#define                           FI_poly_fp_exp   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   37))
#define                      FI_poly_fp_is_monic   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   38))
#define                      FI_poly_fp_to_monic   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   39))
#define                      FI_poly_fp_mod_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   40))
#define                       FI_poly_fp_exp_mod   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   41))
#define                      FI_poly_fp_gcd_poly   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   42))
#define                            FI_poly_fp_dx   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   43))
#define                            FI_poly_fp_Dx   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   44))
#define                        FI_poly_fp_eval_x   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   45))
#define                          FI_poly_fp_eval   ((UINT32) ((MD_POLYFP << (WORDSIZE/2)) +   46))
#define           FI_poly_z2_print_module_status   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    1))
#define        FI_poly_z2_free_module_static_mem   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    2))
#define                         FI_poly_z2_start   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    3))
#define                           FI_poly_z2_end   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    4))
#define                  FI_poly_z2_item_destory   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    5))
#define                     FI_poly_z2_item_move   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    6))
#define                    FI_poly_z2_item_clone   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    7))
#define                      FI_poly_z2_item_cmp   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    8))
#define                    FI_poly_z2_poly_clean   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +    9))
#define                  FI_poly_z2_poly_destory   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   10))
#define                    FI_poly_z2_poly_clone   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   11))
#define                      FI_poly_z2_set_zero   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   12))
#define                       FI_poly_z2_set_one   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   13))
#define                         FI_poly_z2_set_n   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   14))
#define                      FI_poly_z2_poly_cmp   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   15))
#define                         FI_poly_z2_add_n   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   16))
#define                      FI_poly_z2_adc_poly   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   17))
#define                      FI_poly_z2_add_poly   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   18))
#define                     FI_poly_z2_poly_move   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   19))
#define                      FI_poly_z2_mul_poly   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   20))
#define                      FI_poly_z2_squ_poly   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   21))
#define                          FI_poly_z2_sexp   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   22))
#define                           FI_poly_z2_exp   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   23))
#define                            FI_poly_z2_dx   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   24))
#define                            FI_poly_z2_Dx   ((UINT32) ((MD_POLYZ2 << (WORDSIZE/2)) +   25))
#define           FI_poly_zn_print_module_status   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    1))
#define        FI_poly_zn_free_module_static_mem   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    2))
#define                         FI_poly_zn_start   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    3))
#define                           FI_poly_zn_end   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    4))
#define                  FI_poly_zn_item_destory   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    5))
#define                    FI_poly_zn_item_clone   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    6))
#define                      FI_poly_zn_item_cmp   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    7))
#define                      FI_poly_zn_item_neg   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    8))
#define                     FI_poly_zn_item_move   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +    9))
#define                    FI_poly_zn_poly_clean   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   10))
#define                  FI_poly_zn_poly_destory   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   11))
#define                    FI_poly_zn_poly_clone   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   12))
#define                      FI_poly_zn_set_zero   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   13))
#define                       FI_poly_zn_set_one   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   14))
#define                         FI_poly_zn_set_n   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   15))
#define                     FI_poly_zn_poly_move   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   16))
#define                      FI_poly_zn_poly_cmp   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   17))
#define                         FI_poly_zn_add_n   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   18))
#define                      FI_poly_zn_adc_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   19))
#define                      FI_poly_zn_add_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   20))
#define                  FI_poly_zn_sub_poly_bgn   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   21))
#define                  FI_poly_zn_sub_bgn_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   22))
#define                      FI_poly_zn_poly_neg   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   23))
#define                      FI_poly_zn_sub_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   24))
#define                      FI_poly_zn_mul_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   25))
#define                      FI_poly_zn_squ_poly   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   26))
#define                          FI_poly_zn_sexp   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   27))
#define                           FI_poly_zn_exp   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   28))
#define                            FI_poly_zn_dx   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   29))
#define                            FI_poly_zn_Dx   ((UINT32) ((MD_POLYZN << (WORDSIZE/2)) +   30))
#define            FI_sea_fp_print_module_status   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    1))
#define         FI_sea_fp_free_module_static_mem   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    2))
#define                          FI_sea_fp_start   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    3))
#define                            FI_sea_fp_end   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    4))
#define                FI_sea_fp_set_xpx_to_poly   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    5))
#define           FI_sea_fp_set_ec_xpart_to_poly   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    6))
#define               FI_sea_fp_ec_order_is_even   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    7))
#define             FI_sea_fp_poly_fai_tbl_build   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    8))
#define                   FI_sea_fp_poly_destory   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +    9))
#define                     FI_sea_fp_poly_clean   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   10))
#define                   FI_sea_fp_poly_squroot   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   11))
#define                         FI_sea_fp_iso_ec   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   12))
#define                          FI_sea_fp_iso_h   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   13))
#define                  FI_sea_fp_Elkies_kusais   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   14))
#define                         FI_sea_fp_Elkies   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   15))
#define                     FI_sea_fp_Elkies_CRT   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   16))
#define                        FI_sea_fp_Atkin_r   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   17))
#define                    FI_sea_fp_Atkin_r_pos   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   18))
#define             FI_sea_fp_Atkin_s_pos_modify   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   19))
#define         FI_sea_fp_Atkin_s_breakpoint_get   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   20))
#define                 FI_sea_fp_Atkin_s_modify   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   21))
#define      FI_sea_fp_Atkin_s_breakpoint_modify   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   22))
#define                   FI_sea_fp_hash_key_gen   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   23))
#define                      FI_sea_fp_heap_sift   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   24))
#define                      FI_sea_fp_heap_sort   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   25))
#define                        FI_sea_fp_match_R   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   26))
#define                      FI_sea_fp_baby_step   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   27))
#define                     FI_sea_fp_giant_step   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   28))
#define                   FI_sea_fp_ec_point_gen   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   29))
#define                           FI_sea_fp_main   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   30))
#define            FI_sea_fp_read_poly_from_file   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   31))
#define            FI_sea_fp_read_item_from_file   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   32))
#define               FI_sea_fp_poly_fai_j_clean   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   33))
#define           FI_sea_fp_conv_cluster_to_poly   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   34))
#define         FI_sea_fp_conv_const_poly_to_bgn   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   35))
#define              FI_sea_fp_Elkies_set_kusai0   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   36))
#define              FI_sea_fp_Elkies_set_kusai1   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   37))
#define              FI_sea_fp_Elkies_set_kusai2   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   38))
#define              FI_sea_fp_Elkies_set_kusai3   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   39))
#define              FI_sea_fp_Elkies_set_kusai4   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   40))
#define                      FI_sea_fp_test_init   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   41))
#define           FI_sea_fp_test_Atkin_set_check   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   42))
#define          FI_sea_fp_test_Atkin_set_output   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   43))
#define              FI_sea_fp_test_Atkin_output   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   44))
#define FI_sea_fp_test_Atkin_set_heapsort_output   ((UINT32) ((MD_SEAFP << (WORDSIZE/2)) +   45))
#define          FI_vector_r_print_module_status   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    1))
#define       FI_vector_r_free_module_static_mem   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    2))
#define                        FI_vector_r_start   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    3))
#define                          FI_vector_r_end   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    4))
#define          FI_vector_r_new_vector_skeleton   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    5))
#define                  FI_vector_r_move_vector   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    6))
#define                 FI_vector_r_clean_vector   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    7))
#define               FI_vector_r_destroy_vector   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    8))
#define                  FI_vector_r_get_row_num   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +    9))
#define                  FI_vector_r_get_col_num   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   10))
#define                     FI_vector_r_get_type   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   11))
#define                        FI_vector_r_clone   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   13))
#define                      FI_vector_r_is_zero   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   14))
#define                       FI_vector_r_is_one   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   15))
#define                     FI_vector_r_set_zero   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   16))
#define                      FI_vector_r_set_one   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   17))
#define                          FI_vector_r_cmp   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   18))
#define                          FI_vector_r_neg   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   20))
#define                          FI_vector_r_add   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   22))
#define                          FI_vector_r_sub   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   24))
#define                        FI_vector_r_s_mul   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   25))
#define    FI_vector_r_row_vector_mul_col_vector   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   26))
#define                   FI_vector_r_init_block   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   27))
#define                  FI_vector_r_clear_block   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   28))
#define                  FI_vector_r_set_mod_mgr   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   29))
#define                  FI_vector_r_get_mod_mgr   ((UINT32) ((MD_VECTORR << (WORDSIZE/2)) +   30))
#define          FI_matrix_r_print_module_status   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    1))
#define       FI_matrix_r_free_module_static_mem   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    2))
#define                        FI_matrix_r_start   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    3))
#define                          FI_matrix_r_end   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    4))
#define          FI_matrix_r_new_matrix_skeleton   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    5))
#define                  FI_matrix_r_move_matrix   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    6))
#define                 FI_matrix_r_clean_matrix   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    7))
#define               FI_matrix_r_destroy_matrix   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    8))
#define           FI_matrix_r_insert_data_by_row   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +    9))
#define                  FI_matrix_r_get_row_num   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   10))
#define                  FI_matrix_r_get_col_num   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   11))
#define                     FI_matrix_r_get_type   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   12))
#define                    FI_matrix_r_xchg_rows   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   13))
#define                    FI_matrix_r_xchg_cols   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   14))
#define                        FI_matrix_r_clone   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   15))
#define                      FI_matrix_r_is_zero   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   16))
#define                       FI_matrix_r_is_one   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   17))
#define                     FI_matrix_r_set_zero   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   18))
#define                      FI_matrix_r_set_one   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   19))
#define                          FI_matrix_r_cmp   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   20))
#define                       FI_matrix_r_rotate   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   21))
#define                          FI_matrix_r_neg   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   22))
#define                          FI_matrix_r_adc   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   23))
#define                          FI_matrix_r_add   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   24))
#define                          FI_matrix_r_sbb   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   25))
#define                          FI_matrix_r_sub   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   26))
#define                        FI_matrix_r_s_mul   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   27))
#define                     FI_matrix_r_squ_self   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   28))
#define                          FI_matrix_r_squ   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   29))
#define                FI_matrix_r_mul_self_rear   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   30))
#define               FI_matrix_r_mul_self_front   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   31))
#define                          FI_matrix_r_mul   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   32))
#define                          FI_matrix_r_det   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   33))
#define            FI_matrix_r_matrix_mul_vector   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   34))
#define            FI_matrix_r_vector_mul_matrix   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   35))
#define            FI_matrix_r_vector_mul_vector   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   36))
#define                  FI_matrix_r_init_matrix   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   37))
#define                    FI_matrix_r_block_mul   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   38))
#define                  FI_matrix_r_clean_block   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   39))
#define                   FI_matrix_r_init_block   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   40))
#define       FI_matrix_r_block_mul_vector_block   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   41))
#define          FI_matrix_r_matrix_mul_vector_p   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   42))
#define                        FI_matrix_r_mul_p   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   43))
#define                  FI_matrix_r_set_mod_mgr   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   44))
#define                  FI_matrix_r_get_mod_mgr   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   45))
#define          FI_dmatrix_r_print_module_status  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   1))
#define       FI_dmatrix_r_free_module_static_mem  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   2))
#define                        FI_dmatrix_r_start  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   3))
#define                          FI_dmatrix_r_end  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   4))
#define                  FI_dmatrix_r_set_mod_mgr  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   5))
#define                  FI_dmatrix_r_get_mod_mgr  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   6))
#define             FI_dmatrix_r_append_row_block  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   7))
#define             FI_dmatrix_r_append_col_block  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   8))
#define           FI_dmatrix_r_deliver_row_blocks  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   9))
#define           FI_dmatrix_r_deliver_col_blocks  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   10))
#define               FI_dmatrix_r_deliver_rows_p  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   11))
#define               FI_dmatrix_r_deliver_cols_p  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   12))
#define              FI_dmatrix_r_clone_row_block  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   13))
#define                FI_dmatrix_r_adc_row_block  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   14))
#define                FI_dmatrix_r_mul_row_block  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   15))
#define                        FI_dmatrix_r_mul_p  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   16))
#define                  FI_dmatrix_r_clean_cache  ((UINT32) ((MD_DMATRIXR << (WORDSIZE/2)) +   17))

#define         FI_vmatrix_r_print_module_status   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   0))
#define      FI_vmatrix_r_free_module_static_mem   ((UINT32) ((MD_MATRIXR << (WORDSIZE/2)) +   1))
#define                       FI_vmatrix_r_start   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  2))
#define                         FI_vmatrix_r_end   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  3))
#define                 FI_vmatrix_r_set_mod_mgr   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  4))
#define                 FI_vmatrix_r_get_mod_mgr   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  5))
#define                 FI_vmatrix_r_alloc_block   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  6))
#define                  FI_vmatrix_r_free_block   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  7))
#define           FI_vmatrix_r_block_set_row_num   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  8))
#define           FI_vmatrix_r_block_set_col_num   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) +  9))
#define         FI_vmatrix_r_new_matrix_skeleton   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 10))
#define                  FI_vmatrix_r_new_matrix   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 11))
#define                   FI_vmatrix_r_get_block   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 12))
#define                   FI_vmatrix_r_set_block   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 13))
#define                   FI_vmatrix_r_block_mul   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 14))
#define                   FI_vmatrix_r_block_adc   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 15))
#define                FI_vmatrix_r_clean_matrix   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 16))
#define                 FI_vmatrix_r_move_matrix   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 17))
#define                 FI_vmatrix_r_free_matrix   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 18))
#define              FI_vmatrix_r_destroy_matrix   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 19))
#define                       FI_vmatrix_r_mul_p   ((UINT32) ((MD_VMATRIXR << (WORDSIZE/2)) + 20))

#define                FI_tbd_print_module_status  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   0))
#define             FI_tbd_free_module_static_mem  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   1))
#define                              FI_tbd_start  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   2))
#define                                FI_tbd_end  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   3))
#define                        FI_tbd_set_mod_mgr  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   4))
#define                        FI_tbd_get_mod_mgr  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   5))
#define                                FI_tbd_run  ((UINT32) ((MD_TBD << (WORDSIZE/2)) +   6))

#define                FI_vmm_print_module_status  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  0))
#define             FI_vmm_free_module_static_mem  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  1))
#define                              FI_vmm_start  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  2))
#define                                FI_vmm_end  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  3))
#define                        FI_vmm_set_mod_mgr  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  4))
#define                        FI_vmm_get_mod_mgr  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  5))
#define                              FI_vmm_alloc  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  6))
#define                               FI_vmm_free  ((UINT32) ((MD_VMM << (WORDSIZE/2)) +  7))

#define              FI_cfile_print_module_status  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  0))
#define           FI_cfile_free_module_static_mem  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  1))
#define                            FI_cfile_start  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  2))
#define                              FI_cfile_end  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  3))
#define                   FI_cfile_get_cdir_md_id  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  4))
#define                      FI_cfile_set_mod_mgr  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  5))
#define                      FI_cfile_get_mod_mgr  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  6))
#define                         FI_cfile_seg_init  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  7))
#define                        FI_cfile_seg_clean  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  8))
#define                         FI_cfile_seg_free  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) +  9))
#define                  FI_cfile_seg_fcreate_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 10))
#define                   FI_cfile_seg_fexist_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 11))
#define                   FI_cfile_seg_frable_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 12))
#define                   FI_cfile_seg_fwable_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 13))
#define                   FI_cfile_seg_fxable_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 14))
#define                    FI_cfile_seg_fread_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 15))
#define                   FI_cfile_seg_fwrite_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 16))
#define                      FI_cfile_seg_rmv_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 17))
#define                     FI_cfile_seg_copy_ppl  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 18))
#define                     FI_cfile_seg_vec_init  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 19))
#define                    FI_cfile_seg_vec_clean  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 20))
#define                     FI_cfile_seg_vec_free  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 21))
#define                        FI_cfile_node_init  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 22))
#define                       FI_cfile_node_clean  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 23))
#define                        FI_cfile_node_free  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 24))
#define                        FI_cfile_node_read  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 25))
#define                       FI_cfile_node_write  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 26))
#define        FI_cfile_node_write_with_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 27))
#define                     FI_cfile_node_fcreate  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 28))
#define                       FI_cfile_node_fopen  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 29))
#define                      FI_cfile_node_fclose  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 30))
#define                      FI_cfile_node_fexist  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 31))
#define                      FI_cfile_node_frable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 32))
#define                      FI_cfile_node_fwable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 33))
#define                      FI_cfile_node_fxable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 34))
#define                         FI_cfile_node_rmv  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 35))
#define                       FI_cfile_node_clone  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 36))
#define                         FI_cfile_node_cmp  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 37))
#define                      FI_cfile_node_fcheck  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 38))
#define                FI_cfile_seg_open_mode_set  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 39))
#define                      FI_cfile_seg_fcreate  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 40))
#define                       FI_cfile_seg_fexist  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 41))
#define                       FI_cfile_seg_frable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 42))
#define                       FI_cfile_seg_fwable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 43))
#define                       FI_cfile_seg_fxable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 44))
#define                        FI_cfile_seg_fread  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 45))
#define                       FI_cfile_seg_fwrite  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 46))
#define                      FI_cfile_seg_fappend  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 47))
#define                          FI_cfile_seg_rmv  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 48))
#define                        FI_cfile_seg_clone  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 49))
#define                         FI_cfile_seg_copy  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 50))
#define                          FI_cfile_seg_cmp  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 51))
#define                   FI_cfile_seg_dir_create  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 52))
#define                      FI_cfile_seg_dir_rmv  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 53))
#define                    FI_cfile_seg_dir_exist  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 54))
#define                  FI_cfile_seg_vec_fcreate  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 55))
#define                   FI_cfile_seg_vec_fexist  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 56))
#define                   FI_cfile_seg_vec_frable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 57))
#define                   FI_cfile_seg_vec_fwable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 58))
#define                   FI_cfile_seg_vec_fxable  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 59))
#define                    FI_cfile_seg_vec_fread  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 60))
#define                   FI_cfile_seg_vec_fwrite  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 61))
#define                  FI_cfile_seg_vec_fappend  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 62))
#define                      FI_cfile_seg_vec_rmv  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 63))
#define                  FI_cfile_seg_vec_dir_rmv  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 64))
#define                    FI_cfile_seg_vec_clone  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 65))
#define                     FI_cfile_seg_vec_copy  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 66))
#define                      FI_cfile_seg_vec_cmp  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 67))
#define             FI_cfile_fcreate_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 68))
#define               FI_cfile_fopen_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 69))
#define              FI_cfile_fclose_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 70))
#define              FI_cfile_fcheck_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 71))
#define             FI_cfile_fsearch_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 72))
#define               FI_cfile_fread_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 73))
#define              FI_cfile_fwrite_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 74))
#define                FI_cfile_frmv_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 75))
#define              FI_cfile_fclone_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 76))
#define               FI_cfile_fcopy_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 77))
#define                           FI_cfile_upload  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 78))
#define                         FI_cfile_download  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 79))
#define                 FI_cfile_rmv_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 80))
#define               FI_cfile_clone_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 81))
#define                FI_cfile_copy_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 82))
#define              FI_cfile_search_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 83))
#define                 FI_cfile_cmp_on_node_tcid  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 84))
#define                    FI_cfile_fcreate_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 85))
#define                      FI_cfile_fopen_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 86))
#define                     FI_cfile_fclose_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 87))
#define                     FI_cfile_fcheck_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 88))
#define                    FI_cfile_fsearch_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 89))
#define                      FI_cfile_fread_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 90))
#define                     FI_cfile_fwrite_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 91))
#define                       FI_cfile_frmv_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 92))
#define                      FI_cfile_fcopy_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 93))
#define                        FI_cfile_rmv_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 94))
#define                       FI_cfile_copy_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 95))
#define                     FI_cfile_search_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 96))
#define                        FI_cfile_cmp_trans  ((UINT32) ((MD_CFILE << (WORDSIZE/2)) + 97))

#define               FI_cdir_print_module_status  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  0))
#define            FI_cdir_free_module_static_mem  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  1))
#define                             FI_cdir_start  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  2))
#define                               FI_cdir_end  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  3))
#define                   FI_cdir_get_cfile_md_id  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  4))
#define                   FI_cdir_set_cfile_md_id  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  5))
#define                       FI_cdir_set_mod_mgr  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  6))
#define                       FI_cdir_get_mod_mgr  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  7))
#define                          FI_cdir_seg_init  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  8))
#define                         FI_cdir_seg_clean  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) +  9))
#define                          FI_cdir_seg_free  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 10))
#define                           FI_cdir_seg_set  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 11))
#define                           FI_cdir_seg_rmv  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 12))
#define                        FI_cdir_seg_is_dir  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 13))
#define                         FI_cdir_node_init  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 14))
#define                        FI_cdir_node_clean  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 15))
#define                         FI_cdir_node_free  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 16))
#define               FI_cdir_is_dir_on_node_tcid  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 17))
#define               FI_cdir_create_on_node_tcid  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 18))
#define                 FI_cdir_read_on_node_tcid  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 19))
#define                FI_cdir_clean_on_node_tcid  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 20))
#define                  FI_cdir_rmv_on_node_tcid  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 21))
#define                      FI_cdir_search_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 22))
#define                      FI_cdir_is_dir_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 23))
#define                      FI_cdir_create_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 24))
#define                        FI_cdir_read_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 25))
#define                       FI_cdir_clean_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 26))
#define                         FI_cdir_rmv_trans  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 27))
#define                               FI_cdir_cwd  ((UINT32) ((MD_CDIR << (WORDSIZE/2)) + 28))

#define               FI_cmon_print_module_status  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  0))
#define            FI_cmon_free_module_static_mem  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  1))
#define                             FI_cmon_start  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  2))
#define                               FI_cmon_end  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  3))
#define                       FI_cmon_set_mod_mgr  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  4))
#define                       FI_cmon_get_mod_mgr  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  5))
#define                          FI_cmon_obj_meas  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  6))
#define                         FI_cmon_obj_print  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  7))
#define                      FI_cmon_obj_vec_init  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  8))
#define                     FI_cmon_obj_vec_clean  ((UINT32) ((MD_CMON << (WORDSIZE/2)) +  9))
#define                      FI_cmon_obj_vec_free  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 10))
#define                      FI_cmon_obj_vec_size  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 11))
#define                       FI_cmon_obj_vec_add  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 12))
#define                       FI_cmon_obj_vec_get  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 13))
#define                       FI_cmon_obj_vec_set  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 14))
#define                      FI_cmon_obj_vec_incl  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 15))
#define                      FI_cmon_obj_vec_excl  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 16))
#define                      FI_cmon_obj_vec_meas  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 17))
#define                     FI_cmon_obj_vec_print  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 18))
#define                    FI_cmon_obj_vec_report  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 19))
#define               FI_cmon_obj_vec_merge_print  ((UINT32) ((MD_CMON << (WORDSIZE/2)) + 20))

#define              FI_super_print_module_status  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  0))
#define           FI_super_free_module_static_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  1))
#define                            FI_super_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  2))
#define                              FI_super_end  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  3))
#define                   FI_super_sync_taskc_mgr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  4))
#define             FI_super_check_tcid_connected  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  5))
#define                         FI_super_show_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  6))
#define                 FI_super_show_mem_of_type  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  7))
#define                         FI_super_diag_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  8))
#define                 FI_super_diag_mem_of_type  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  9))
#define                        FI_super_clean_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 10))
#define                FI_super_shutdown_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 11))
#define                  FI_super_sync_cload_stat  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 12))
#define                    FI_super_sync_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 13))
#define         FI_super_sync_taskcomm_from_local  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 14))
#define                    FI_super_ping_taskcomm  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 15))
#define                      FI_super_show_queues  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 16))
#define               FI_super_handle_broken_tcid  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 17))
#define               FI_super_notify_broken_tcid  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 18))
#define              FI_super_notify_broken_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 19))
#define                  FI_super_show_thread_num  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 20))
#define                 FI_super_show_route_table  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 21))
#define                   FI_super_show_rank_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 22))
#define           FI_super_switch_rank_node_green  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 23))
#define             FI_super_switch_rank_node_red  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 24))
#define                 FI_super_show_work_client  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 25))
#define                     FI_super_show_cstring  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 26))
#define                   FI_super_switch_log_off  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 27))
#define                    FI_super_switch_log_on  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 28))
#define                    FI_super_wait_me_ready  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 29))
#define                        FI_super_add_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 30))
#define                        FI_super_del_route  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 31))
#define                   FI_super_add_connection  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 32))
#define                        FI_super_run_shell  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 33))
#define                   FI_super_show_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 34))
#define                   FI_super_sync_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 35))
#define                    FI_super_set_rank_load  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 36))
#define                  FI_super_enable_task_brd  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 37))
#define                 FI_super_disable_task_brd  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 38))
#define                FI_super_heartbeat_on_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 39))
#define                FI_super_heartbeat_on_rank  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 40))
#define                    FI_super_heartbeat_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 41))
#define                   FI_super_heartbeat_none  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 42))
#define                     FI_super_make_license  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 43))
#define                    FI_super_check_license  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 44))
#define                     FI_super_show_license  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 45))
#define                     FI_super_show_version  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 46))
#define                      FI_super_show_vendor  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 47))
#define                     FI_super_get_wordsize  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 48))
#define                    FI_super_show_wordsize  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 49))
#define                   FI_super_sync_cload_mgr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 50))
#define                         FI_super_download  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 51))
#define                           FI_super_upload  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 52))
#define                       FI_super_exec_shell  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 53))
#define                  FI_super_sync_cload_node  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 54))
#define           FI_super_register_hsbgt_cluster  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 55))
#define           FI_super_register_hsdfs_cluster  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 56))
#define                 FI_super_activate_sys_cfg  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 57))
#define                     FI_super_show_sys_cfg  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 58))
#define                   FI_super_exec_shell_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 59))
#define         FI_super_exec_shell_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 60))
#define           FI_super_download_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 61))
#define             FI_super_upload_vec_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 62))
#define             FI_super_exec_shell_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 63))
#define               FI_super_download_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 64))
#define                 FI_super_upload_tcid_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 65))
#define           FI_super_check_ipaddr_connected  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 66))
#define           FI_super_exec_shell_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 67))
#define       FI_super_exec_shell_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 68))
#define             FI_super_download_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 69))
#define         FI_super_download_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 70))
#define               FI_super_upload_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 71))
#define           FI_super_upload_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 72))
#define          FI_super_collect_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 73))
#define                 FI_super_ping_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 74))
#define                      FI_super_write_fdata  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 75))
#define                       FI_super_read_fdata  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 76))
#define                        FI_super_size_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 77))
#define                        FI_super_open_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 78))
#define                       FI_super_close_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 79))
#define                   FI_super_transfer_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 80))
#define                    FI_super_transfer_stop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 81))
#define                         FI_super_transfer  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 82))
#define             FI_super_transfer_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 83))
#define               FI_super_transfer_vec_start  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 84))
#define                FI_super_transfer_vec_stop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 85))
#define                     FI_super_transfer_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 86))
#define         FI_super_transfer_vec_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 87))
#define                           FI_super_backup  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 88))
#define                     FI_super_set_progress  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 89))
#define                     FI_super_get_progress  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 90))
#define           FI_super_start_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 91))
#define            FI_super_stop_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 92))
#define          FI_super_status_mcast_udp_server  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 93))
#define                  FI_super_cancel_task_req  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 94))
#define                         FI_super_rmv_file  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 95))
#define                     FI_super_set_hostname  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 96))
#define                     FI_super_get_hostname  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 97))
#define         FI_super_set_hostname_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 98))
#define         FI_super_get_hostname_ipaddr_cstr  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 99))
#define         FI_super_exec_shell_cbtimer_reset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 100))
#define           FI_super_exec_shell_cbtimer_set  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 101))
#define         FI_super_exec_shell_cbtimer_unset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) + 102))
#define FI_super_exec_shell_ipaddr_cstr_cbtimer_set    ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  103))
#define FI_super_exec_shell_ipaddr_cstr_cbtimer_unset  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  104))
#define                        FI_super_load_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  105))
#define                    FI_super_load_data_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  106))
#define                         FI_super_get_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  107))
#define                     FI_super_get_data_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  108))
#define                       FI_super_print_data  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  109))
#define                   FI_super_print_data_all  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  110))
#define                    FI_super_print_obj_vec  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  111))
#define                    FI_super_set_zone_size  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  112))
#define                    FI_super_breathing_mem  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  113))
#define               FI_super_show_log_level_tab  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  114))
#define                FI_super_set_log_level_tab  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  115))
#define             FI_super_set_log_level_sector  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  116))
#define                        FI_super_say_hello  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  117))
#define                   FI_super_say_hello_loop  ((UINT32) ((MD_SUPER << (WORDSIZE/2)) +  118))

#define               FI_cdfs_print_module_status  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  0))
#define            FI_cdfs_free_module_static_mem  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  1))
#define                             FI_cdfs_start  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  2))
#define                               FI_cdfs_end  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  3))
#define                   FI_cdfs_set_npp_mod_mgr  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  4))
#define                    FI_cdfs_set_dn_mod_mgr  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  5))
#define                          FI_cdfs_open_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  6))
#define                         FI_cdfs_close_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  7))
#define              FI_cdfs_close_with_flush_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  8))
#define                        FI_cdfs_create_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) +  9))
#define                           FI_cdfs_add_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 10))
#define                            FI_cdfs_add_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 11))
#define                        FI_cdfs_add_dn_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 12))
#define                           FI_cdfs_reg_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 13))
#define                            FI_cdfs_reg_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 14))
#define                        FI_cdfs_reg_dn_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 15))
#define                          FI_cdfs_find_dir  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 16))
#define                         FI_cdfs_find_file  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 17))
#define                              FI_cdfs_find  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 18))
#define                             FI_cdfs_write  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 19))
#define                              FI_cdfs_read  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 20))
#define                         FI_cdfs_create_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 21))
#define                           FI_cdfs_open_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 22))
#define                          FI_cdfs_close_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 23))
#define               FI_cdfs_close_with_flush_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 24))
#define                      FI_cdfs_write_dn_ppl  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 25))
#define                       FI_cdfs_read_dn_ppl  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 26))
#define                        FI_cdfs_write_dn_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 27))
#define                           FI_cdfs_read_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 28))
#define                             FI_cdfs_qfile  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 29))
#define                              FI_cdfs_qdir  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 30))
#define                        FI_cdfs_qlist_path  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 31))
#define                         FI_cdfs_qlist_seg  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 32))
#define                         FI_cdfs_flush_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 33))
#define                          FI_cdfs_flush_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 34))
#define                            FI_cdfs_is_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 35))
#define                             FI_cdfs_is_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 36))
#define                          FI_cdfs_list_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 37))
#define                           FI_cdfs_list_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 38))
#define                          FI_cdfs_file_num  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 39))
#define                         FI_cdfs_file_size  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 40))
#define                    FI_cdfs_check_replicas  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 41))
#define                FI_cdfs_check_file_content  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 42))
#define       FI_cdfs_check_replica_files_content  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 43))
#define                  FI_cdfs_figure_out_block  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 44))
#define                          FI_cdfs_show_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 45))
#define                           FI_cdfs_show_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 46))
#define                    FI_cdfs_show_cached_np  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 47))
#define                          FI_cdfs_flush_np  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 48))
#define                  FI_cdfs_show_specific_np  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 49))
#define                         FI_cdfs_write_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 50))
#define                          FI_cdfs_read_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 51))
#define                         FI_cdfs_read_dn_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 52))
#define                    FI_cdfs_lost_fnode_log  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 53))
#define       FI_cdfs_import_lost_fnode_from_file  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 54))
#define                  FI_cdfs_lost_replica_log  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 55))
#define     FI_cdfs_import_lost_replica_from_file  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 56))
#define           FI_cdfs_disable_write_access_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 57))
#define                        FI_cdfs_update_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 58))
#define                             FI_cdfs_mkdir  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 59))
#define                         FI_cdfs_mkdir_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 60))
#define                           FI_cdfs_mkdir_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 61))
#define                            FI_cdfs_is_dir  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 62))
#define                           FI_cdfs_is_file  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 63))
#define                            FI_cdfs_exists  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 64))
#define                           FI_cdfs_getattr  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 65))
#define                       FI_cdfs_getattr_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 66))
#define                        FI_cdfs_delete_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 67))
#define                      FI_cdfs_delete_npp_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 68))
#define                         FI_cdfs_delete_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 69))
#define                       FI_cdfs_delete_dn_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 70))
#define                            FI_cdfs_delete  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 71))
#define                      FI_cdfs_transfer_out  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 72))
#define                       FI_cdfs_transfer_in  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 73))
#define                          FI_cdfs_transfer  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 74))
#define                   FI_cdfs_transfer_update  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 75))
#define                       FI_cdfs_snapshot_dn  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 76))
#define                      FI_cdfs_snapshot_npp  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 77))
#define                          FI_cdfs_snapshot  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 78))
#define                       FI_cdfs_add_npp_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 79))
#define                       FI_cdfs_reg_npp_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 80))
#define               FI_cdfs_collect_dn_tcid_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 81))
#define              FI_cdfs_collect_npp_tcid_vec  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 82))
#define                   FI_cdfs_truncate_dn_ppl  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 83))
#define                     FI_cdfs_truncate_dn_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 84))
#define                          FI_cdfs_truncate  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 85))
#define                            FI_cdfs_update  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 86))
#define                       FI_cdfs_update_dn_p  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 87))
#define                     FI_cdfs_update_dn_ppl  ((UINT32) ((MD_CDFS << (WORDSIZE/2)) + 88))

#define              FI_csolr_print_module_status  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  0))
#define           FI_csolr_free_module_static_mem  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  1))
#define                            FI_csolr_start  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  2))
#define                              FI_csolr_end  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  3))
#define                      FI_csolr_set_mod_mgr  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  4))
#define                         FI_csolr_send_req  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  5))
#define                         FI_csolr_recv_req  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  6))
#define                         FI_csolr_send_rsp  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  7))
#define                         FI_csolr_recv_rsp  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  8))
#define                           FI_csolr_do_req  ((UINT32) ((MD_CSOLR << (WORDSIZE/2)) +  9))

#define               FI_cbgt_print_module_status  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  0))
#define            FI_cbgt_free_module_static_mem  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  1))
#define                             FI_cbgt_start  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  2))
#define                               FI_cbgt_end  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  3))
#define                      FI_cbgt_aging_handle  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  4))
#define                       FI_cbgt_set_mod_mgr  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  5))
#define                     FI_cbgt_close_mod_mgr  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  6))
#define                      FI_cbgt_print_status  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  7))
#define                    FI_cbgt_is_root_server  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  8))
#define                    FI_cbgt_is_meta_server  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) +  9))
#define                    FI_cbgt_is_colf_server  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 10))
#define                    FI_cbgt_is_user_server  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 11))
#define                    FI_cbgt_is_user_client  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 12))
#define                       FI_cbgt_check_exist  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 13))
#define                    FI_cbgt_fetch_table_id  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 14))
#define                  FI_cbgt_reserve_table_id  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 15))
#define                  FI_cbgt_release_table_id  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 16))
#define                         FI_cbgt_delete_kv  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 17))
#define                             FI_cbgt_merge  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 18))
#define                             FI_cbgt_split  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 19))
#define                             FI_cbgt_flush  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 20))
#define                       FI_cbgt_exist_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 21))
#define              FI_cbgt_create_table_on_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 22))
#define               FI_cbgt_create_colf_on_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 23))
#define              FI_cbgt_create_table_on_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 24))
#define              FI_cbgt_create_table_on_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 25))
#define          FI_cbgt_get_colf_table_from_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 26))
#define          FI_cbgt_get_colf_table_from_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 27))
#define          FI_cbgt_get_user_table_from_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 28))
#define          FI_cbgt_get_user_table_from_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 29))
#define          FI_cbgt_get_user_table_from_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 30))
#define         FI_cbgt_open_colf_table_from_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 31))
#define         FI_cbgt_open_colf_table_from_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 32))
#define         FI_cbgt_open_user_table_from_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 33))
#define         FI_cbgt_open_user_table_from_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 34))
#define         FI_cbgt_open_user_table_from_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 35))
#define                   FI_cbgt_close_rmc_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 36))
#define                  FI_cbgt_close_user_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 37))
#define                       FI_cbgt_insert_rfqv  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 38))
#define                       FI_cbgt_insert_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 39))
#define                            FI_cbgt_insert  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 40))
#define                  FI_cbgt_delete_from_user  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 41))
#define                  FI_cbgt_delete_from_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 42))
#define                            FI_cbgt_delete  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 43))
#define                   FI_cbgt_insert_register  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 44))
#define                  FI_cbgt_search_from_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 45))
#define                  FI_cbgt_search_from_user  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 46))
#define                            FI_cbgt_search  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 47))
#define                         FI_cbgt_fetch_key  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 48))
#define                         FI_cbgt_fetch_row  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 49))
#define                  FI_cbgt_fetch_user_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 50))
#define                    FI_cbgt_fetch_from_rmc  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 51))
#define                   FI_cbgt_fetch_from_user  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 52))
#define                             FI_cbgt_fetch  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 53))
#define                      FI_cbgt_update_value  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 54))
#define                     FI_cbgt_mess_register  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 55))
#define                   FI_cbgt_update_register  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 56))
#define                    FI_cbgt_split_register  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 57))
#define                    FI_cbgt_merge_register  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 58))
#define                    FI_cbgt_report_closing  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 59))
#define                FI_cbgt_cleanup_colf_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 60))
#define                FI_cbgt_cleanup_meta_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 61))
#define                 FI_cbgt_delete_user_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 62))
#define                 FI_cbgt_delete_colf_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 63))
#define                    FI_cbgt_add_colf_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 64))
#define                  FI_cbgt_select_from_user  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 65))
#define                  FI_cbgt_select_from_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 66))
#define                  FI_cbgt_select_from_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 67))
#define                  FI_cbgt_select_from_root  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 68))
#define                    FI_cbgt_select_in_meta  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 69))
#define                    FI_cbgt_select_in_colf  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 70))
#define                            FI_cbgt_select  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 71))
#define                         FI_cbgt_traversal  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 72))
#define                        FI_cbgt_runthrough  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 73))
#define                   FI_cbgt_traversal_depth  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 74))
#define                  FI_cbgt_runthrough_depth  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 75))
#define                 FI_cbgt_get_root_mod_node  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 76))
#define                       FI_cbgt_merge_table  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 77))
#define                        FI_cbgt_was_access  ((UINT32) ((MD_CBGT << (WORDSIZE/2)) + 78))

#define            FI_ganglia_print_module_status  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  0))
#define         FI_ganglia_free_module_static_mem  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  1))
#define                          FI_ganglia_start  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  2))
#define                            FI_ganglia_end  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  3))
#define               FI_ganglia_report_cpus_load  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  4))
#define            FI_ganglia_report_sys_mem_load  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  5))
#define           FI_ganglia_report_proc_mem_load  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  6))
#define       FI_ganglia_report_crank_thread_stat  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  7))
#define               FI_ganglia_report_dsks_stat  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  8))
#define               FI_ganglia_report_eths_stat  ((UINT32) ((MD_GANGLIA << (WORDSIZE/2)) +  9))

#define           FI_csession_print_module_status  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  0))
#define        FI_csession_free_module_static_mem  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  1))
#define                         FI_csession_start  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  2))
#define                           FI_csession_end  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  3))
#define                          FI_csession_show  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  4))
#define               FI_csession_node_is_expired  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  5))
#define                           FI_csession_add  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  6))
#define                   FI_csession_rmv_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  7))
#define                     FI_csession_rmv_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  8))
#define                      FI_csession_get_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) +  9))
#define                        FI_csession_get_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 10))
#define                           FI_csession_set  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 11))
#define                   FI_csession_set_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 12))
#define                     FI_csession_set_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 13))
#define                           FI_csession_get  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 14))
#define                   FI_csession_get_by_name  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 15))
#define                     FI_csession_get_by_id  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 16))
#define             FI_csession_get_by_name_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 17))
#define               FI_csession_get_by_id_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 18))
#define             FI_csession_rmv_by_name_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 19))
#define               FI_csession_rmv_by_id_regex  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 20))
#define                 FI_csession_expire_handle  ((UINT32) ((MD_CSESSION << (WORDSIZE/2)) + 21))

#define             FI_cscore_print_module_status  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  0))
#define          FI_cscore_free_module_static_mem  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  1))
#define                           FI_cscore_start  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  2))
#define                             FI_cscore_end  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  3))
#define              FI_cscore_csdoc_words_import  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  4))
#define              FI_cscore_csword_docs_export  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  5))
#define         FI_cscore_csdoc_words_list_import  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  6))
#define         FI_cscore_csword_docs_list_export  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  7))
#define    FI_cscore_csword_docs_list_export_docs  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  8))
#define          FI_cscore_csword_docs_list_merge  ((UINT32) ((MD_CSCORE << (WORDSIZE/2)) +  9))

#define                             FI_usr_run_01  ((UINT32) ((MD_CRUN << (WORDSIZE/2)) +  0))
#define                             FI_usr_run_02  ((UINT32) ((MD_CRUN << (WORDSIZE/2)) +  1))

#define               FI_crfs_print_module_status  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  0))
#define            FI_crfs_free_module_static_mem  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  1))
#define                             FI_crfs_start  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  2))
#define                               FI_crfs_end  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  3))
#define                   FI_crfs_set_npp_mod_mgr  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  4))
#define                    FI_crfs_set_dn_mod_mgr  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  5))
#define                          FI_crfs_open_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  6))
#define                         FI_crfs_close_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  7))
#define                            FI_crfs_is_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  8))
#define                             FI_crfs_is_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) +  9))
#define                     FI_crfs_is_npp_and_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 10))
#define                        FI_crfs_create_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 11))
#define                           FI_crfs_add_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 12))
#define                            FI_crfs_add_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 13))
#define                         FI_crfs_find_file  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 14))
#define                              FI_crfs_find  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 15))
#define                            FI_crfs_exists  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 16))
#define                           FI_crfs_is_file  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 17))
#define                             FI_crfs_write  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 18))
#define                              FI_crfs_read  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 19))
#define                         FI_crfs_create_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 20))
#define                           FI_crfs_open_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 21))
#define                          FI_crfs_close_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 22))
#define                          FI_crfs_write_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 23))
#define                           FI_crfs_read_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 24))
#define                         FI_crfs_write_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 25))
#define                          FI_crfs_read_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 26))
#define                            FI_crfs_delete  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 27))
#define                             FI_crfs_qfile  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 28))
#define                         FI_crfs_flush_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 29))
#define                          FI_crfs_flush_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 30))
#define                          FI_crfs_file_num  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 31))
#define                         FI_crfs_file_size  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 32))
#define                            FI_crfs_search  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 33))
#define                FI_crfs_check_file_content  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 34))
#define                     FI_crfs_check_file_is  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 35))
#define                          FI_crfs_show_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 36))
#define                           FI_crfs_show_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 37))
#define                    FI_crfs_show_cached_np  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 38))
#define                  FI_crfs_show_specific_np  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 39))
#define                             FI_crfs_mkdir  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 40))
#define                        FI_crfs_update_npp  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 41))
#define                        FI_crfs_write_e_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 42))
#define                         FI_crfs_read_e_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 43))
#define                           FI_crfs_write_e  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 44))
#define                            FI_crfs_read_e  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 45))
#define                          FI_crfs_create_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 46))
#define                           FI_crfs_write_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 47))
#define                            FI_crfs_read_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 48))
#define                          FI_crfs_add_disk  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 49))
#define                          FI_crfs_del_disk  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 50))
#define                        FI_crfs_mount_disk  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 51))
#define                       FI_crfs_umount_disk  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 52))
#define                        FI_crfs_reserve_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 53))
#define                        FI_crfs_release_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 54))
#define                         FI_crfs_export_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 55))
#define                           FI_crfs_forward  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 56))
#define                        FI_crfs_cmp_finger  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 57))
#define                           FI_crfs_cleanup  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 58))
#define                         FI_crfs_expire_dn  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 59))
#define                              FI_crfs_qdir  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 60))
#define                        FI_crfs_qlist_path  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 61))
#define                         FI_crfs_qlist_seg  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 62))
#define                            FI_crfs_update  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 63))
#define                             FI_crfs_renew  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 64))
#define                           FI_crfs_write_r  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 65))
#define                          FI_crfs_update_r  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 66))
#define                          FI_crfs_delete_r  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 67))
#define                           FI_crfs_renew_r  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 68))
#define                         FI_crfs_write_b_r  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 69))
#define                           FI_crfs_recycle  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 70))
#define                       FI_crfs_delete_file  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 71))
#define                     FI_crfs_delete_file_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 72))
#define                        FI_crfs_delete_dir  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 73))
#define                  FI_crfs_qlist_path_of_np  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 74))
#define                   FI_crfs_qlist_seg_of_np  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 75))
#define                      FI_crfs_store_size_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 76))
#define                       FI_crfs_file_md5sum  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 77))
#define                     FI_crfs_file_md5sum_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 78))
#define                       FI_crfs_np_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 79))
#define                      FI_crfs_npp_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 80))
#define                      FI_crfs_vol_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 81))
#define                     FI_crfs_disk_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 82))
#define                       FI_crfs_dn_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 83))
#define                      FI_crfs_all_snapshot  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 84))
#define                         FI_crfs_set_state  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 85))
#define                         FI_crfs_get_state  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 86))
#define                          FI_crfs_is_state  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 87))
#define                     FI_crfs_create_backup  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 88))
#define                       FI_crfs_open_backup  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 89))
#define                      FI_crfs_close_backup  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 90))
#define                       FI_crfs_find_file_b  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 91))
#define                        FI_crfs_start_sync  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 92))
#define                          FI_crfs_end_sync  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 93))
#define                            FI_crfs_replay  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 94))
#define                       FI_crfs_show_backup  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 95))
#define                          FI_crfs_find_dir  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 96))
#define                          FI_crfs_transfer  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 97))
#define                      FI_crfs_transfer_pre  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 98))
#define                   FI_crfs_transfer_handle  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 99))
#define                     FI_crfs_transfer_post  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 100))
#define                  FI_crfs_transfer_recycle  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + 101))
//#define                       FI_crfs_write_cache  ((UINT32) ((MD_CRFS << (WORDSIZE/2)) + XX))

#define               FI_chfs_print_module_status  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  0))
#define            FI_chfs_free_module_static_mem  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  1))
#define                             FI_chfs_start  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  2))
#define                               FI_chfs_end  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  3))
#define                   FI_chfs_set_npp_mod_mgr  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  4))
#define                    FI_chfs_set_dn_mod_mgr  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  5))
#define                          FI_chfs_open_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  6))
#define                         FI_chfs_close_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  7))
#define                            FI_chfs_is_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  8))
#define                             FI_chfs_is_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) +  9))
#define                     FI_chfs_is_npp_and_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 10))
#define                        FI_chfs_create_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 11))
#define                           FI_chfs_add_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 12))
#define                            FI_chfs_add_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 13))
#define                         FI_chfs_find_file  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 14))
#define                              FI_chfs_find  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 15))
#define                            FI_chfs_exists  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 16))
#define                           FI_chfs_is_file  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 17))
#define                               FI_chfs_set  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 18))
#define                             FI_chfs_write  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 19))
#define                              FI_chfs_read  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 20))
#define                         FI_chfs_create_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 21))
#define                           FI_chfs_open_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 22))
#define                          FI_chfs_close_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 23))
#define                          FI_chfs_write_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 24))
#define                           FI_chfs_read_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 25))
#define                         FI_chfs_write_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 26))
#define                          FI_chfs_read_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 27))
#define                        FI_chfs_delete_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 28))
#define                         FI_chfs_delete_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 29))
#define                            FI_chfs_delete  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 30))
#define                             FI_chfs_qfile  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 31))
#define                         FI_chfs_flush_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 32))
#define                          FI_chfs_flush_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 33))
#define                          FI_chfs_file_num  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 34))
#define                         FI_chfs_file_size  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 35))
#define                            FI_chfs_search  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 36))
#define                FI_chfs_check_file_content  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 37))
#define                     FI_chfs_check_file_is  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 38))
#define                          FI_chfs_show_npp  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 39))
#define                           FI_chfs_show_dn  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 40))
#define                    FI_chfs_show_cached_np  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 41))
#define                  FI_chfs_show_specific_np  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 42))
#define                          FI_chfs_add_disk  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 43))
#define                          FI_chfs_del_disk  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 44))
#define                        FI_chfs_mount_disk  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 45))
#define                       FI_chfs_umount_disk  ((UINT32) ((MD_CHFS << (WORDSIZE/2)) + 46))

#define              FI_crfsc_print_module_status  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  0))
#define           FI_crfsc_free_module_static_mem  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  1))
#define                            FI_crfsc_start  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  2))
#define                              FI_crfsc_end  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  3))
#define                      FI_crfsc_find_dir_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  4))
#define                         FI_crfsc_find_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  5))
#define                     FI_crfsc_find_file_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  6))
#define                        FI_crfsc_find_file  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  7))
#define                   FI_crfsc_find_file_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  8))
#define                      FI_crfsc_find_file_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) +  9))
#define                          FI_crfsc_is_file  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 10))
#define                           FI_crfsc_is_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 11))
#define                         FI_crfsc_write_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 12))
#define                            FI_crfsc_write  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 13))
#define                          FI_crfsc_read_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 14))
#define                             FI_crfsc_read  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 15))
#define                       FI_crfsc_write_e_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 16))
#define                          FI_crfsc_write_e  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 17))
#define                        FI_crfsc_read_e_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 18))
#define                           FI_crfsc_read_e  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 19))
#define                      FI_crfsc_create_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 20))
#define                         FI_crfsc_create_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 21))
#define                       FI_crfsc_write_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 22))
#define                          FI_crfsc_write_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 23))
#define                        FI_crfsc_read_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 24))
#define                           FI_crfsc_read_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 25))
#define                         FI_crfsc_renew_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 26))
#define                            FI_crfsc_renew  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 27))
#define                   FI_crfsc_delete_file_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 28))
#define                      FI_crfsc_delete_file  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 29))
#define                 FI_crfsc_delete_file_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 30))
#define                    FI_crfsc_delete_file_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 31))
#define                    FI_crfsc_delete_dir_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 32))
#define                       FI_crfsc_delete_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 33))
#define                           FI_crfsc_delete  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 34))
#define                        FI_crfsc_update_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 35))
#define                           FI_crfsc_update  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 36))
#define                         FI_crfsc_qfile_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 37))
#define                            FI_crfsc_qfile  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 38))
#define                     FI_crfsc_file_size_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 39))
#define                        FI_crfsc_file_size  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 40))
#define                  FI_crfsc_store_size_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 41))
#define                     FI_crfsc_store_size_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 42))
#define                   FI_crfsc_file_md5sum_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 43))
#define                      FI_crfsc_file_md5sum  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 44))
#define                 FI_crfsc_file_md5sum_b_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 45))
#define                    FI_crfsc_file_md5sum_b  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 46))
#define                       FI_crfsc_recycle_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 47))
#define                          FI_crfsc_recycle  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 48))
#define                          FI_crfsc_add_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 49))
#define                          FI_crfsc_del_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 50))
#define                          FI_crfsc_has_dir  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 51))
#define                         FI_crfsc_exist_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 52))
#define                         FI_crfsc_flush_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 53))
#define                          FI_crfsc_load_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 54))
#define                         FI_crfsc_print_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 55))
#define               FI_crfsc_trans_dir_whole_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 56))
#define                  FI_crfsc_trans_dir_whole  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 57))
#define                 FI_crfsc_trans_dir_pre_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 58))
#define                    FI_crfsc_trans_dir_pre  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 59))
#define              FI_crfsc_trans_dir_handle_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 60))
#define                 FI_crfsc_trans_dir_handle  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 61))
#define                FI_crfsc_trans_dir_post_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 62))
#define                   FI_crfsc_trans_dir_post  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 63))
#define             FI_crfsc_trans_dir_recycle_ep  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 64))
#define                FI_crfsc_trans_dir_recycle  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 65))
#define                         FI_crfsc_clone_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 66))
#define                      FI_crfsc_rollback_dt  ((UINT32) ((MD_CRFSC << (WORDSIZE/2)) + 67))

#define           FI_cxmppc2s_print_module_status  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  0))
#define        FI_cxmppc2s_free_module_static_mem  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  1))
#define                         FI_cxmppc2s_start  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  2))
#define                           FI_cxmppc2s_end  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  3))
#define                  FI_cxmppc2s_get_mod_node  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  4))
#define                  FI_cxmppc2s_send_message  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  5))
#define            FI_cxmppc2s_presence_subscribe  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  6))
#define           FI_cxmppc2s_presence_subscribed  ((UINT32) ((MD_CXMPPC2S << (WORDSIZE/2)) +  7))

#define              FI_ccurl_print_module_status  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  0))
#define           FI_ccurl_free_module_static_mem  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  1))
#define                            FI_ccurl_start  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  2))
#define                              FI_ccurl_end  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  3))
#define                      FI_ccurl_set_mod_mgr  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  4))
#define                              FI_ccurl_get  ((UINT32) ((MD_CCURL << (WORDSIZE/2)) +  5))

#endif/* _FINDEX_INC */

