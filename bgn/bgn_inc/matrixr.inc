/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 312230917
*
*******************************************************************************/
#ifndef _MATRIXR_INC
#define _MATRIXR_INC

#include "findex.inc"

FUNC_ADDR_NODE g_matrixr_func_addr_list[ ] = {
{
/* -- void matrix_r_print_module_status(const UINT32 matrixr_md_id, LOG *log); -- */
/*func priority   */     PRIO_BEG,
/*func logic addr */     (UINT32)matrix_r_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_print_module_status",
/*func index      */     FI_matrix_r_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_free_module_static_mem(const UINT32 matrixr_md_id); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_free_module_static_mem",
/*func index      */     FI_matrix_r_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_start( ); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_start",
/*func index      */     FI_matrix_r_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void matrix_r_end(const UINT32 matrixr_md_id); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_end",
/*func index      */     FI_matrix_r_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_new_matrix_skeleton(const UINT32 matrixr_md_id, const UINT32 row_num, const UINT32 col_num, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_new_matrix_skeleton,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_new_matrix_skeleton",
/*func index      */     FI_matrix_r_new_matrix_skeleton,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_move_matrix(const UINT32 matrixr_md_id, MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_move_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_move_matrix",
/*func index      */     FI_matrix_r_move_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_clean_matrix(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_clean_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_clean_matrix",
/*func index      */     FI_matrix_r_clean_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_destroy_matrix(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_destroy_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_destroy_matrix",
/*func index      */     FI_matrix_r_destroy_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_insert_data_by_row(const UINT32 matrixr_md_id, const REAL *pdata[], const UINT32 data_num, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_insert_data_by_row,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_insert_data_by_row",
/*func index      */     FI_matrix_r_insert_data_by_row,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_REAL_ptr,e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_get_row_num(const UINT32 matrixr_md_id, const MATRIX *matrix, UINT32 *row_num); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_get_row_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_row_num",
/*func index      */     FI_matrix_r_get_row_num,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_get_col_num(const UINT32 matrixr_md_id, const MATRIX *matrix, UINT32 *col_num); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_get_col_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_col_num",
/*func index      */     FI_matrix_r_get_col_num,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_get_type(const UINT32 matrixr_md_id, const MATRIX *matrix, UINT32 *row_num, UINT32 *col_num); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_get_type,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_type",
/*func index      */     FI_matrix_r_get_type,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_UINT32_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_xchg_rows(const UINT32 matrixr_md_id, const UINT32 row_no_1, const UINT32 row_no_2, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_xchg_rows,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_xchg_rows",
/*func index      */     FI_matrix_r_xchg_rows,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_xchg_cols(const UINT32 matrixr_md_id, const UINT32 col_no_1, const UINT32 col_no_2, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_xchg_cols,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_xchg_cols",
/*func index      */     FI_matrix_r_xchg_cols,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_clone(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_clone,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_clone",
/*func index      */     FI_matrix_r_clone,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL matrix_r_is_zero(const UINT32 matrixr_md_id, const MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_is_zero,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_is_zero",
/*func index      */     FI_matrix_r_is_zero,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL matrix_r_is_one(const UINT32 matrixr_md_id, const MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_is_one,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_is_one",
/*func index      */     FI_matrix_r_is_one,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_set_zero(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_set_zero,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_set_zero",
/*func index      */     FI_matrix_r_set_zero,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_set_one(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_set_one,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_set_one",
/*func index      */     FI_matrix_r_set_one,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL matrix_r_cmp(const UINT32 matrixr_md_id, const MATRIX *matrix_1, const MATRIX *matrix_2); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_cmp,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_cmp",
/*func index      */     FI_matrix_r_cmp,
/*func ret type   */     e_dbg_EC_BOOL,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_rotate(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_rotate,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_rotate",
/*func index      */     FI_matrix_r_rotate,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_neg(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_neg,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_neg",
/*func index      */     FI_matrix_r_neg,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_adc(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_adc,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_adc",
/*func index      */     FI_matrix_r_adc,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_add(const UINT32 matrixr_md_id, const MATRIX *src_matrix_1, const MATRIX *src_matrix_2, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_add,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_add",
/*func index      */     FI_matrix_r_add,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_sbb(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_sbb,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_sbb",
/*func index      */     FI_matrix_r_sbb,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_sub(const UINT32 matrixr_md_id, const MATRIX *src_matrix_1, const MATRIX *src_matrix_2, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_sub,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_sub",
/*func index      */     FI_matrix_r_sub,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_s_mul(const UINT32 matrixr_md_id, const REAL *s_data_addr, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_s_mul,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_s_mul",
/*func index      */     FI_matrix_r_s_mul,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_REAL_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_squ_self(const UINT32 matrixr_md_id, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_squ_self,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_squ_self",
/*func index      */     FI_matrix_r_squ_self,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_squ(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_squ,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_squ",
/*func index      */     FI_matrix_r_squ,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_mul_self_rear(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_mul_self_rear,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_mul_self_rear",
/*func index      */     FI_matrix_r_mul_self_rear,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_mul_self_front(const UINT32 matrixr_md_id, const MATRIX *src_matrix, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_mul_self_front,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_mul_self_front",
/*func index      */     FI_matrix_r_mul_self_front,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_mul(const UINT32 matrixr_md_id, const MATRIX *src_matrix_1, const MATRIX *src_matrix_2, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_mul,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_mul",
/*func index      */     FI_matrix_r_mul,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_matrix_mul_vector(const UINT32 matrixr_md_id, const MATRIX *src_matrix,const VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_matrix_mul_vector,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_matrix_mul_vector",
/*func index      */     FI_matrix_r_matrix_mul_vector,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_init_matrix(const UINT32 matrixr_md_id, MATRIX *matrix) -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_init_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_init_matrix",
/*func index      */     FI_matrix_r_init_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_block_mul(const UINT32 matrixr_md_id, const MATRIX_BLOCK *src_matrix_block_1, const MATRIX_BLOCK *src_matrix_block_2,MATRIX_BLOCK *des_matrix_block); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_block_mul,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_block_mul",
/*func index      */     FI_matrix_r_block_mul,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,e_dbg_MATRIXR_BLOCK_ptr,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_clean_block(const UINT32 matrixr_md_id, MATRIX_BLOCK *matrix_block); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_clean_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_clean_block",
/*func index      */     FI_matrix_r_clean_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_init_block(const UINT32 matrixr_md_id, MATRIX_BLOCK *matrix_block); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_init_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_init_block",
/*func index      */     FI_matrix_r_init_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_block_mul_vector_block(const UINT32 matrixr_md_id, const MATRIX_BLOCK *src_matrix_block, const VECTOR_BLOCK *src_vector_block, VECTOR_BLOCK *des_vector_block); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_block_mul_vector_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_block_mul_vector_block",
/*func index      */     FI_matrix_r_block_mul_vector_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,e_dbg_VECTORR_BLOCK_ptr,e_dbg_VECTORR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_matrix_mul_vector_p(const UINT32 matrixr_md_id, const MATRIX *src_matrix,const VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_matrix_mul_vector_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_matrix_mul_vector_p",
/*func index      */     FI_matrix_r_matrix_mul_vector_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_mul_p(const UINT32 matrixr_md_id, const MATRIX *src_matrix_1, const MATRIX *src_matrix_2, MATRIX *des_matrix); -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_mul_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_mul_p",
/*func index      */     FI_matrix_r_mul_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 matrix_r_set_mod_mgr(const UINT32 matrixr_md_id, const MOD_MGR * src_task_mod_mgr) -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_set_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_set_mod_mgr",
/*func index      */     FI_matrix_r_set_mod_mgr,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MOD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- MOD_MGR * matrix_r_get_mod_mgr(const UINT32 matrixr_md_id) -- */
/*func priority   */     PRIO_MD_MATRIXR,
/*func logic addr */     (UINT32)matrix_r_get_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_mod_mgr",
/*func index      */     FI_matrix_r_get_mod_mgr,
/*func ret type   */     e_dbg_MOD_MGR_ptr,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN},
/*func para type  */     {e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_matrixr_func_addr_list_len = sizeof(g_matrixr_func_addr_list)/sizeof(g_matrixr_func_addr_list[0]);

#endif/*_MATRIXR_INC*/

