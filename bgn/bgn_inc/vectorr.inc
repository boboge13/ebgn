/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 312230917
*
*******************************************************************************/
#ifndef _VECTORR_INC
#define _VECTORR_INC

#include "findex.inc"

FUNC_ADDR_NODE g_vectorr_func_addr_list[ ] = {
{
/* -- void vector_r_print_module_status(const UINT32 vectorr_md_id, LOG *log); -- */
/*func priority   */    PRIO_BEG,
/*func logic addr */    (UINT32)vector_r_print_module_status,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_print_module_status",
/*func index      */    FI_vector_r_print_module_status,
/*func ret type   */    e_dbg_void,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */    {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */    0, 0, {0},
},
{
/* -- UINT32 vector_r_free_module_static_mem(const UINT32 vectorr_md_id); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_free_module_static_mem,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_free_module_static_mem",
/*func index      */    FI_vector_r_free_module_static_mem,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_start( ); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_start,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_start",
/*func index      */    FI_vector_r_start,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    0,
/*func para direct*/    {E_DIRECT_END,},
/*func para type  */    {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void vector_r_end(const UINT32 vectorr_md_id); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_end,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_end",
/*func index      */    FI_vector_r_end,
/*func ret type   */    e_dbg_void,
/*func para num   */    1,
/*func para direct*/    {E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_new_vector_skeleton(const UINT32 vectorr_md_id, const UINT32 num, VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_new_vector_skeleton,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_new_vector_skeleton",
/*func index      */    FI_vector_r_new_vector_skeleton,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_move_vector(const UINT32 vectorr_md_id, VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_move_vector,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_move_vector",
/*func index      */    FI_vector_r_move_vector,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_clean_vector(const UINT32 vectorr_md_id, VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_clean_vector,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_clean_vector",
/*func index      */    FI_vector_r_clean_vector,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_destroy_vector(const UINT32 vectorr_md_id, VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_destroy_vector,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_destroy_vector",
/*func index      */    FI_vector_r_destroy_vector,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_get_row_num(const UINT32 vectorr_md_id, const VECTOR *vector, UINT32 *row_num); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_get_row_num,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_get_row_num",
/*func index      */    FI_vector_r_get_row_num,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_get_col_num(const UINT32 vectorr_md_id, const VECTOR *vector, UINT32 *col_num); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_get_col_num,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_get_col_num",
/*func index      */    FI_vector_r_get_col_num,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_get_type(const UINT32 vectorr_md_id, const VECTOR *vector, UINT32 *row_num, UINT32 *col_num); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_get_type,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_get_type",
/*func index      */    FI_vector_r_get_type,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_UINT32_ptr,e_dbg_UINT32_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_clone(const UINT32 vectorr_md_id, const VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_clone,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_clone",
/*func index      */    FI_vector_r_clone,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL vector_r_is_zero(const UINT32 vectorr_md_id, const VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_is_zero,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_is_zero",
/*func index      */    FI_vector_r_is_zero,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL vector_r_is_one(const UINT32 vectorr_md_id, const VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_is_one,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_is_one",
/*func index      */    FI_vector_r_is_one,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_set_zero(const UINT32 vectorr_md_id, VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_set_zero,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_set_zero",
/*func index      */    FI_vector_r_set_zero,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_set_one(const UINT32 vectorr_md_id, VECTOR *vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_set_one,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_set_one",
/*func index      */    FI_vector_r_set_one,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    2,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- EC_BOOL vector_r_cmp(const UINT32 vectorr_md_id, const VECTOR *vector_1, const VECTOR *vector_2); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_cmp,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_cmp",
/*func index      */    FI_vector_r_cmp,
/*func ret type   */    e_dbg_EC_BOOL,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_neg(const UINT32 vectorr_md_id, const VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_neg,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_neg",
/*func index      */    FI_vector_r_neg,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    3,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_add(const UINT32 vectorr_md_id, const VECTOR *src_vector_1, const VECTOR *src_vector_2, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_add,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_add",
/*func index      */    FI_vector_r_add,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_sub(const UINT32 vectorr_md_id, const VECTOR *src_vector_1, const VECTOR *src_vector_2, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_sub,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_sub",
/*func index      */    FI_vector_r_sub,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_s_mul(const UINT32 vectorr_md_id, const REAL *s_data_addr, const VECTOR *src_vector, VECTOR *des_vector); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_s_mul,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_s_mul",
/*func index      */    FI_vector_r_s_mul,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_REAL_ptr,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_row_vector_mul_col_vector(const UINT32 vectorr_md_id, const VECTOR *src_vector_1, const VECTOR *src_vector_2, REAL *des_data_addr); -- */
/*func priority   */    PRIO_MD_VECTORR,
/*func logic addr */    (UINT32)vector_r_row_vector_mul_col_vector,
/*func beg addr   */    0,
/*func end addr   */    0,
/*func addr offset*/    0,
/*func name       */    "vector_r_row_vector_mul_col_vector",
/*func index      */    FI_vector_r_row_vector_mul_col_vector,
/*func ret type   */    e_dbg_UINT32,
/*func para num   */    4,
/*func para direct*/    {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */    {e_dbg_UINT32,e_dbg_VECTORR_ptr,e_dbg_VECTORR_ptr,e_dbg_REAL_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_init_block(const UINT32 vectorr_md_id, VECTOR_BLOCK *vector_block); -- */
/*func priority   */     PRIO_MD_VECTORR,
/*func logic addr */     (UINT32)vector_r_init_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vector_r_init_block",
/*func index      */     FI_vector_r_init_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_clear_block( const UINT32 vectorr_md_type, const UINT32 vectorr_md_id, VECTOR_BLOCK *vector_block); -- */
/*func priority   */     PRIO_MD_VECTORR,
/*func logic addr */     (UINT32)vector_r_clear_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vector_r_clear_block",
/*func index      */     FI_vector_r_clear_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_VECTORR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vector_r_set_mod_mgr(const UINT32 vectorr_md_id, const MOD_MGR * src_task_mod_mgr); -- */
/*func priority   */     PRIO_MD_VECTORR,
/*func logic addr */     (UINT32)vector_r_set_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vector_r_set_mod_mgr",
/*func index      */     FI_vector_r_set_mod_mgr,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MOD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- MOD_MGR * vector_r_get_mod_mgr(const UINT32 vectorr_md_id); -- */
/*func priority   */     PRIO_MD_VECTORR,
/*func logic addr */     (UINT32)vector_r_get_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vector_r_get_mod_mgr",
/*func index      */     FI_vector_r_get_mod_mgr,
/*func ret type   */     e_dbg_MOD_MGR_ptr,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
};

UINT32 g_vectorr_func_addr_list_len = sizeof(g_vectorr_func_addr_list)/sizeof(g_vectorr_func_addr_list[0]);

#endif/*_VECTORR_INC*/

