/******************************************************************************
*
* Copyright (C) Chaoyong Zhou
* Email: bgnvendor@gmail.com 
* QQ: 2796796
*
*******************************************************************************/
#ifndef _VMATRIXR_INC
#define _VMATRIXR_INC

#include "type.h"
#include "debug.h"
#include "findex.inc"

FUNC_ADDR_NODE g_vmatrixr_func_addr_list[ ] = {
{
/* -- void vmatrix_r_print_module_status(const UINT32 vmatrixr_md_id, LOG *log); -- */
/*func priority   */     PRIO_BEG,
/*func logic addr */     (UINT32)vmatrix_r_print_module_status,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_print_module_status",
/*func index      */     FI_vmatrix_r_print_module_status,
/*func ret type   */     e_dbg_void,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_LOG_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_free_module_static_mem(const UINT32 vmatrixr_md_id); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_free_module_static_mem,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_free_module_static_mem",
/*func index      */     FI_vmatrix_r_free_module_static_mem,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_start( ); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_start,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_start",
/*func index      */     FI_vmatrix_r_start,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     0,
/*func para direct*/     {E_DIRECT_END,},
/*func para type  */     {e_dbg_type_end,},
/*func para val   */     0, 0, {0},
},
{
/* -- void vmatrix_r_end(const UINT32 vmatrixr_md_id); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_end,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_end",
/*func index      */     FI_vmatrix_r_end,
/*func ret type   */     e_dbg_void,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_set_mod_mgr(const UINT32 vmatrixr_md_id, const MOD_MGR * src_mod_mgr); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_set_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_set_mod_mgr",
/*func index      */     FI_vmatrix_r_set_mod_mgr,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MOD_MGR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- MOD_MGR * vmatrix_r_get_mod_mgr(const UINT32 matrixr_md_id) -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_get_mod_mgr,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "matrix_r_get_mod_mgr",
/*func index      */     FI_vmatrix_r_get_mod_mgr,
/*func ret type   */     e_dbg_MOD_MGR_ptr,
/*func para num   */     1,
/*func para direct*/     {E_DIRECT_IN},
/*func para type  */     {e_dbg_UINT32},
/*func para val   */     0, 0, {0},
},

{
/* -- UINT32 vmatrix_r_alloc_block(const UINT32 vmatrixr_md_id, VMM_NODE *matrix_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_alloc_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_alloc_block",
/*func index      */     FI_vmatrix_r_alloc_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_free_block(const UINT32 vmatrixr_md_id, VMM_NODE *matrix_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_free_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_free_block",
/*func index      */     FI_vmatrix_r_free_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_block_set_row_num(const UINT32 vmatrixr_md_id, const UINT32 row_num, const VMM_NODE *matrix_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_block_set_row_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_block_set_row_num",
/*func index      */     FI_vmatrix_r_block_set_row_num,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_block_set_col_num(const UINT32 vmatrixr_md_id, const UINT32 col_num, const VMM_NODE *matrix_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_block_set_col_num,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_block_set_col_num",
/*func index      */     FI_vmatrix_r_block_set_col_num,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_new_matrix_skeleton(const UINT32 vmatrixr_md_id, const UINT32 row_num, const UINT32 col_num, MATRIX *matrix); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_new_matrix_skeleton,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_new_matrix_skeleton",
/*func index      */     FI_vmatrix_r_new_matrix_skeleton,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_MATRIXR_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_new_matrix(const UINT32 vmatrixr_md_id, const UINT32 row_num, const UINT32 col_num, VMM_NODE *matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_new_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_new_matrix",
/*func index      */     FI_vmatrix_r_new_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_UINT32,e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_get_block(const UINT32 vmatrixr_md_id, const VMM_NODE *vmm_node, MATRIX_BLOCK *matrix_block); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_get_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_get_block",
/*func index      */     FI_vmatrix_r_get_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_OUT,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,e_dbg_MATRIXR_BLOCK_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_set_block(const UINT32 vmatrixr_md_id, const MATRIX_BLOCK *matrix_block, VMM_NODE *vmm_node); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_set_block,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_set_block",
/*func index      */     FI_vmatrix_r_set_block,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_MATRIXR_BLOCK_ptr,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_block_mul(const UINT32 vmatrixr_md_id, const VMM_NODE *src_matrix_row_block_vmm_1, const VMM_NODE *src_matrix_row_block_vmm_2, VMM_NODE *des_matrix_row_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_block_mul,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_block_mul",
/*func index      */     FI_vmatrix_r_block_mul,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_block_adc(const UINT32 vmatrixr_md_id, const VMM_NODE *src_matrix_row_block_vmm, VMM_NODE *des_matrix_row_block_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_block_adc,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_block_adc",
/*func index      */     FI_vmatrix_r_block_adc,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_clean_matrix(const UINT32 vmatrixr_md_id, VMM_NODE *matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_clean_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_clean_matrix",
/*func index      */     FI_vmatrix_r_clean_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_move_matrix(const UINT32 vmatrixr_md_id, VMM_NODE *src_matrix_vmm, VMM_NODE *des_matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_move_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_move_matrix",
/*func index      */     FI_vmatrix_r_move_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     3,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_free_matrix( const UINT32 vmatrixr_md_id, VMM_NODE *matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_free_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_free_matrix",
/*func index      */     FI_vmatrix_r_free_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_destroy_matrix( const UINT32 vmatrixr_md_id, VMM_NODE *matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_destroy_matrix,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_destroy_matrix",
/*func index      */     FI_vmatrix_r_destroy_matrix,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     2,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},
{
/* -- UINT32 vmatrix_r_mul_p(const UINT32 vmatrixr_md_id, const VMM_NODE *src_matrix_vmm_1, const VMM_NODE *src_matrix_vmm_2, VMM_NODE *des_matrix_vmm); -- */
/*func priority   */     PRIO_MD_VMATRIXR,
/*func logic addr */     (UINT32)vmatrix_r_mul_p,
/*func beg addr   */     0,
/*func end addr   */     0,
/*func addr offset*/     0,
/*func name       */     "vmatrix_r_mul_p",
/*func index      */     FI_vmatrix_r_mul_p,
/*func ret type   */     e_dbg_UINT32,
/*func para num   */     4,
/*func para direct*/     {E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IN,E_DIRECT_IO,},
/*func para type  */     {e_dbg_UINT32,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,e_dbg_VMM_NODE_ptr,},
/*func para val   */     0, 0, {0},
},


};

UINT32 g_vmatrixr_func_addr_list_len = sizeof(g_vmatrixr_func_addr_list)/sizeof(g_vmatrixr_func_addr_list[0]);

#endif/*_VMATRIXR_INC*/
